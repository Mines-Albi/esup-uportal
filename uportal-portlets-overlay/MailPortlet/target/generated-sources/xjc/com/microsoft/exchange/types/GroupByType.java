//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 *         Allows consumers to specify arbitrary groupings for FindItem queries.
 *       
 * 
 * <p>Java class for GroupByType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GroupByType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/services/2006/types}BaseGroupByType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="FieldURI" type="{http://schemas.microsoft.com/exchange/services/2006/types}PathToUnindexedFieldType"/>
 *           &lt;element name="IndexedFieldURI" type="{http://schemas.microsoft.com/exchange/services/2006/types}PathToIndexedFieldType"/>
 *           &lt;element name="ExtendedFieldURI" type="{http://schemas.microsoft.com/exchange/services/2006/types}PathToExtendedFieldType"/>
 *         &lt;/choice>
 *         &lt;element name="AggregateOn" type="{http://schemas.microsoft.com/exchange/services/2006/types}AggregateOnType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GroupByType", propOrder = {
    "extendedFieldURI",
    "indexedFieldURI",
    "fieldURI",
    "aggregateOn"
})
public class GroupByType
    extends BaseGroupByType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ExtendedFieldURI")
    protected PathToExtendedFieldType extendedFieldURI;
    @XmlElement(name = "IndexedFieldURI")
    protected PathToIndexedFieldType indexedFieldURI;
    @XmlElement(name = "FieldURI")
    protected PathToUnindexedFieldType fieldURI;
    @XmlElement(name = "AggregateOn", required = true)
    protected AggregateOnType aggregateOn;

    /**
     * Gets the value of the extendedFieldURI property.
     * 
     * @return
     *     possible object is
     *     {@link PathToExtendedFieldType }
     *     
     */
    public PathToExtendedFieldType getExtendedFieldURI() {
        return extendedFieldURI;
    }

    /**
     * Sets the value of the extendedFieldURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link PathToExtendedFieldType }
     *     
     */
    public void setExtendedFieldURI(PathToExtendedFieldType value) {
        this.extendedFieldURI = value;
    }

    /**
     * Gets the value of the indexedFieldURI property.
     * 
     * @return
     *     possible object is
     *     {@link PathToIndexedFieldType }
     *     
     */
    public PathToIndexedFieldType getIndexedFieldURI() {
        return indexedFieldURI;
    }

    /**
     * Sets the value of the indexedFieldURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link PathToIndexedFieldType }
     *     
     */
    public void setIndexedFieldURI(PathToIndexedFieldType value) {
        this.indexedFieldURI = value;
    }

    /**
     * Gets the value of the fieldURI property.
     * 
     * @return
     *     possible object is
     *     {@link PathToUnindexedFieldType }
     *     
     */
    public PathToUnindexedFieldType getFieldURI() {
        return fieldURI;
    }

    /**
     * Sets the value of the fieldURI property.
     * 
     * @param value
     *     allowed object is
     *     {@link PathToUnindexedFieldType }
     *     
     */
    public void setFieldURI(PathToUnindexedFieldType value) {
        this.fieldURI = value;
    }

    /**
     * Gets the value of the aggregateOn property.
     * 
     * @return
     *     possible object is
     *     {@link AggregateOnType }
     *     
     */
    public AggregateOnType getAggregateOn() {
        return aggregateOn;
    }

    /**
     * Sets the value of the aggregateOn property.
     * 
     * @param value
     *     allowed object is
     *     {@link AggregateOnType }
     *     
     */
    public void setAggregateOn(AggregateOnType value) {
        this.aggregateOn = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            PathToExtendedFieldType theExtendedFieldURI;
            theExtendedFieldURI = this.getExtendedFieldURI();
            strategy.appendField(locator, this, "extendedFieldURI", buffer, theExtendedFieldURI);
        }
        {
            PathToIndexedFieldType theIndexedFieldURI;
            theIndexedFieldURI = this.getIndexedFieldURI();
            strategy.appendField(locator, this, "indexedFieldURI", buffer, theIndexedFieldURI);
        }
        {
            PathToUnindexedFieldType theFieldURI;
            theFieldURI = this.getFieldURI();
            strategy.appendField(locator, this, "fieldURI", buffer, theFieldURI);
        }
        {
            AggregateOnType theAggregateOn;
            theAggregateOn = this.getAggregateOn();
            strategy.appendField(locator, this, "aggregateOn", buffer, theAggregateOn);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GroupByType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final GroupByType that = ((GroupByType) object);
        {
            PathToExtendedFieldType lhsExtendedFieldURI;
            lhsExtendedFieldURI = this.getExtendedFieldURI();
            PathToExtendedFieldType rhsExtendedFieldURI;
            rhsExtendedFieldURI = that.getExtendedFieldURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extendedFieldURI", lhsExtendedFieldURI), LocatorUtils.property(thatLocator, "extendedFieldURI", rhsExtendedFieldURI), lhsExtendedFieldURI, rhsExtendedFieldURI)) {
                return false;
            }
        }
        {
            PathToIndexedFieldType lhsIndexedFieldURI;
            lhsIndexedFieldURI = this.getIndexedFieldURI();
            PathToIndexedFieldType rhsIndexedFieldURI;
            rhsIndexedFieldURI = that.getIndexedFieldURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "indexedFieldURI", lhsIndexedFieldURI), LocatorUtils.property(thatLocator, "indexedFieldURI", rhsIndexedFieldURI), lhsIndexedFieldURI, rhsIndexedFieldURI)) {
                return false;
            }
        }
        {
            PathToUnindexedFieldType lhsFieldURI;
            lhsFieldURI = this.getFieldURI();
            PathToUnindexedFieldType rhsFieldURI;
            rhsFieldURI = that.getFieldURI();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fieldURI", lhsFieldURI), LocatorUtils.property(thatLocator, "fieldURI", rhsFieldURI), lhsFieldURI, rhsFieldURI)) {
                return false;
            }
        }
        {
            AggregateOnType lhsAggregateOn;
            lhsAggregateOn = this.getAggregateOn();
            AggregateOnType rhsAggregateOn;
            rhsAggregateOn = that.getAggregateOn();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "aggregateOn", lhsAggregateOn), LocatorUtils.property(thatLocator, "aggregateOn", rhsAggregateOn), lhsAggregateOn, rhsAggregateOn)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PathToExtendedFieldType theExtendedFieldURI;
            theExtendedFieldURI = this.getExtendedFieldURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extendedFieldURI", theExtendedFieldURI), currentHashCode, theExtendedFieldURI);
        }
        {
            PathToIndexedFieldType theIndexedFieldURI;
            theIndexedFieldURI = this.getIndexedFieldURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "indexedFieldURI", theIndexedFieldURI), currentHashCode, theIndexedFieldURI);
        }
        {
            PathToUnindexedFieldType theFieldURI;
            theFieldURI = this.getFieldURI();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fieldURI", theFieldURI), currentHashCode, theFieldURI);
        }
        {
            AggregateOnType theAggregateOn;
            theAggregateOn = this.getAggregateOn();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "aggregateOn", theAggregateOn), currentHashCode, theAggregateOn);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
