//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for TaskType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TaskType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/services/2006/types}ItemType">
 *       &lt;sequence>
 *         &lt;element name="ActualWork" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="AssignedTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="BillingInformation" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="ChangeCount" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="Companies" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfStringsType" minOccurs="0"/>
 *         &lt;element name="CompleteDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="Contacts" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfStringsType" minOccurs="0"/>
 *         &lt;element name="DelegationState" type="{http://schemas.microsoft.com/exchange/services/2006/types}TaskDelegateStateType" minOccurs="0"/>
 *         &lt;element name="Delegator" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="DueDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="IsAssignmentEditable" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="IsComplete" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsRecurring" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsTeamTask" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="Mileage" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Owner" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="PercentComplete" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/>
 *         &lt;element name="Recurrence" type="{http://schemas.microsoft.com/exchange/services/2006/types}TaskRecurrenceType" minOccurs="0"/>
 *         &lt;element name="StartDate" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="Status" type="{http://schemas.microsoft.com/exchange/services/2006/types}TaskStatusType" minOccurs="0"/>
 *         &lt;element name="StatusDescription" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TotalWork" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TaskType", propOrder = {
    "actualWork",
    "assignedTime",
    "billingInformation",
    "changeCount",
    "companies",
    "completeDate",
    "contacts",
    "delegationState",
    "delegator",
    "dueDate",
    "isAssignmentEditable",
    "isComplete",
    "isRecurring",
    "isTeamTask",
    "mileage",
    "owner",
    "percentComplete",
    "recurrence",
    "startDate",
    "status",
    "statusDescription",
    "totalWork"
})
public class TaskType
    extends ItemType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ActualWork")
    protected Integer actualWork;
    @XmlElement(name = "AssignedTime")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar assignedTime;
    @XmlElement(name = "BillingInformation")
    protected String billingInformation;
    @XmlElement(name = "ChangeCount")
    protected Integer changeCount;
    @XmlElement(name = "Companies")
    protected ArrayOfStringsType companies;
    @XmlElement(name = "CompleteDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar completeDate;
    @XmlElement(name = "Contacts")
    protected ArrayOfStringsType contacts;
    @XmlElement(name = "DelegationState")
    protected TaskDelegateStateType delegationState;
    @XmlElement(name = "Delegator")
    protected String delegator;
    @XmlElement(name = "DueDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dueDate;
    @XmlElement(name = "IsAssignmentEditable")
    protected Integer isAssignmentEditable;
    @XmlElement(name = "IsComplete")
    protected Boolean isComplete;
    @XmlElement(name = "IsRecurring")
    protected Boolean isRecurring;
    @XmlElement(name = "IsTeamTask")
    protected Boolean isTeamTask;
    @XmlElement(name = "Mileage")
    protected String mileage;
    @XmlElement(name = "Owner")
    protected String owner;
    @XmlElement(name = "PercentComplete")
    protected Double percentComplete;
    @XmlElement(name = "Recurrence")
    protected TaskRecurrenceType recurrence;
    @XmlElement(name = "StartDate")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar startDate;
    @XmlElement(name = "Status")
    protected TaskStatusType status;
    @XmlElement(name = "StatusDescription")
    protected String statusDescription;
    @XmlElement(name = "TotalWork")
    protected Integer totalWork;

    /**
     * Gets the value of the actualWork property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getActualWork() {
        return actualWork;
    }

    /**
     * Sets the value of the actualWork property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setActualWork(Integer value) {
        this.actualWork = value;
    }

    /**
     * Gets the value of the assignedTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getAssignedTime() {
        return assignedTime;
    }

    /**
     * Sets the value of the assignedTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setAssignedTime(XMLGregorianCalendar value) {
        this.assignedTime = value;
    }

    /**
     * Gets the value of the billingInformation property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBillingInformation() {
        return billingInformation;
    }

    /**
     * Sets the value of the billingInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBillingInformation(String value) {
        this.billingInformation = value;
    }

    /**
     * Gets the value of the changeCount property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getChangeCount() {
        return changeCount;
    }

    /**
     * Sets the value of the changeCount property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setChangeCount(Integer value) {
        this.changeCount = value;
    }

    /**
     * Gets the value of the companies property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public ArrayOfStringsType getCompanies() {
        return companies;
    }

    /**
     * Sets the value of the companies property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public void setCompanies(ArrayOfStringsType value) {
        this.companies = value;
    }

    /**
     * Gets the value of the completeDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getCompleteDate() {
        return completeDate;
    }

    /**
     * Sets the value of the completeDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setCompleteDate(XMLGregorianCalendar value) {
        this.completeDate = value;
    }

    /**
     * Gets the value of the contacts property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public ArrayOfStringsType getContacts() {
        return contacts;
    }

    /**
     * Sets the value of the contacts property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public void setContacts(ArrayOfStringsType value) {
        this.contacts = value;
    }

    /**
     * Gets the value of the delegationState property.
     * 
     * @return
     *     possible object is
     *     {@link TaskDelegateStateType }
     *     
     */
    public TaskDelegateStateType getDelegationState() {
        return delegationState;
    }

    /**
     * Sets the value of the delegationState property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaskDelegateStateType }
     *     
     */
    public void setDelegationState(TaskDelegateStateType value) {
        this.delegationState = value;
    }

    /**
     * Gets the value of the delegator property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDelegator() {
        return delegator;
    }

    /**
     * Sets the value of the delegator property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDelegator(String value) {
        this.delegator = value;
    }

    /**
     * Gets the value of the dueDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDueDate() {
        return dueDate;
    }

    /**
     * Sets the value of the dueDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDueDate(XMLGregorianCalendar value) {
        this.dueDate = value;
    }

    /**
     * Gets the value of the isAssignmentEditable property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getIsAssignmentEditable() {
        return isAssignmentEditable;
    }

    /**
     * Sets the value of the isAssignmentEditable property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setIsAssignmentEditable(Integer value) {
        this.isAssignmentEditable = value;
    }

    /**
     * Gets the value of the isComplete property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsComplete() {
        return isComplete;
    }

    /**
     * Sets the value of the isComplete property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsComplete(Boolean value) {
        this.isComplete = value;
    }

    /**
     * Gets the value of the isRecurring property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsRecurring() {
        return isRecurring;
    }

    /**
     * Sets the value of the isRecurring property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsRecurring(Boolean value) {
        this.isRecurring = value;
    }

    /**
     * Gets the value of the isTeamTask property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsTeamTask() {
        return isTeamTask;
    }

    /**
     * Sets the value of the isTeamTask property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsTeamTask(Boolean value) {
        this.isTeamTask = value;
    }

    /**
     * Gets the value of the mileage property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMileage() {
        return mileage;
    }

    /**
     * Sets the value of the mileage property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMileage(String value) {
        this.mileage = value;
    }

    /**
     * Gets the value of the owner property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOwner() {
        return owner;
    }

    /**
     * Sets the value of the owner property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOwner(String value) {
        this.owner = value;
    }

    /**
     * Gets the value of the percentComplete property.
     * 
     * @return
     *     possible object is
     *     {@link Double }
     *     
     */
    public Double getPercentComplete() {
        return percentComplete;
    }

    /**
     * Sets the value of the percentComplete property.
     * 
     * @param value
     *     allowed object is
     *     {@link Double }
     *     
     */
    public void setPercentComplete(Double value) {
        this.percentComplete = value;
    }

    /**
     * Gets the value of the recurrence property.
     * 
     * @return
     *     possible object is
     *     {@link TaskRecurrenceType }
     *     
     */
    public TaskRecurrenceType getRecurrence() {
        return recurrence;
    }

    /**
     * Sets the value of the recurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaskRecurrenceType }
     *     
     */
    public void setRecurrence(TaskRecurrenceType value) {
        this.recurrence = value;
    }

    /**
     * Gets the value of the startDate property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getStartDate() {
        return startDate;
    }

    /**
     * Sets the value of the startDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setStartDate(XMLGregorianCalendar value) {
        this.startDate = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link TaskStatusType }
     *     
     */
    public TaskStatusType getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link TaskStatusType }
     *     
     */
    public void setStatus(TaskStatusType value) {
        this.status = value;
    }

    /**
     * Gets the value of the statusDescription property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStatusDescription() {
        return statusDescription;
    }

    /**
     * Sets the value of the statusDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStatusDescription(String value) {
        this.statusDescription = value;
    }

    /**
     * Gets the value of the totalWork property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getTotalWork() {
        return totalWork;
    }

    /**
     * Sets the value of the totalWork property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setTotalWork(Integer value) {
        this.totalWork = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Integer theActualWork;
            theActualWork = this.getActualWork();
            strategy.appendField(locator, this, "actualWork", buffer, theActualWork);
        }
        {
            XMLGregorianCalendar theAssignedTime;
            theAssignedTime = this.getAssignedTime();
            strategy.appendField(locator, this, "assignedTime", buffer, theAssignedTime);
        }
        {
            String theBillingInformation;
            theBillingInformation = this.getBillingInformation();
            strategy.appendField(locator, this, "billingInformation", buffer, theBillingInformation);
        }
        {
            Integer theChangeCount;
            theChangeCount = this.getChangeCount();
            strategy.appendField(locator, this, "changeCount", buffer, theChangeCount);
        }
        {
            ArrayOfStringsType theCompanies;
            theCompanies = this.getCompanies();
            strategy.appendField(locator, this, "companies", buffer, theCompanies);
        }
        {
            XMLGregorianCalendar theCompleteDate;
            theCompleteDate = this.getCompleteDate();
            strategy.appendField(locator, this, "completeDate", buffer, theCompleteDate);
        }
        {
            ArrayOfStringsType theContacts;
            theContacts = this.getContacts();
            strategy.appendField(locator, this, "contacts", buffer, theContacts);
        }
        {
            TaskDelegateStateType theDelegationState;
            theDelegationState = this.getDelegationState();
            strategy.appendField(locator, this, "delegationState", buffer, theDelegationState);
        }
        {
            String theDelegator;
            theDelegator = this.getDelegator();
            strategy.appendField(locator, this, "delegator", buffer, theDelegator);
        }
        {
            XMLGregorianCalendar theDueDate;
            theDueDate = this.getDueDate();
            strategy.appendField(locator, this, "dueDate", buffer, theDueDate);
        }
        {
            Integer theIsAssignmentEditable;
            theIsAssignmentEditable = this.getIsAssignmentEditable();
            strategy.appendField(locator, this, "isAssignmentEditable", buffer, theIsAssignmentEditable);
        }
        {
            Boolean theIsComplete;
            theIsComplete = this.isIsComplete();
            strategy.appendField(locator, this, "isComplete", buffer, theIsComplete);
        }
        {
            Boolean theIsRecurring;
            theIsRecurring = this.isIsRecurring();
            strategy.appendField(locator, this, "isRecurring", buffer, theIsRecurring);
        }
        {
            Boolean theIsTeamTask;
            theIsTeamTask = this.isIsTeamTask();
            strategy.appendField(locator, this, "isTeamTask", buffer, theIsTeamTask);
        }
        {
            String theMileage;
            theMileage = this.getMileage();
            strategy.appendField(locator, this, "mileage", buffer, theMileage);
        }
        {
            String theOwner;
            theOwner = this.getOwner();
            strategy.appendField(locator, this, "owner", buffer, theOwner);
        }
        {
            Double thePercentComplete;
            thePercentComplete = this.getPercentComplete();
            strategy.appendField(locator, this, "percentComplete", buffer, thePercentComplete);
        }
        {
            TaskRecurrenceType theRecurrence;
            theRecurrence = this.getRecurrence();
            strategy.appendField(locator, this, "recurrence", buffer, theRecurrence);
        }
        {
            XMLGregorianCalendar theStartDate;
            theStartDate = this.getStartDate();
            strategy.appendField(locator, this, "startDate", buffer, theStartDate);
        }
        {
            TaskStatusType theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            String theStatusDescription;
            theStatusDescription = this.getStatusDescription();
            strategy.appendField(locator, this, "statusDescription", buffer, theStatusDescription);
        }
        {
            Integer theTotalWork;
            theTotalWork = this.getTotalWork();
            strategy.appendField(locator, this, "totalWork", buffer, theTotalWork);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TaskType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TaskType that = ((TaskType) object);
        {
            Integer lhsActualWork;
            lhsActualWork = this.getActualWork();
            Integer rhsActualWork;
            rhsActualWork = that.getActualWork();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "actualWork", lhsActualWork), LocatorUtils.property(thatLocator, "actualWork", rhsActualWork), lhsActualWork, rhsActualWork)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsAssignedTime;
            lhsAssignedTime = this.getAssignedTime();
            XMLGregorianCalendar rhsAssignedTime;
            rhsAssignedTime = that.getAssignedTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "assignedTime", lhsAssignedTime), LocatorUtils.property(thatLocator, "assignedTime", rhsAssignedTime), lhsAssignedTime, rhsAssignedTime)) {
                return false;
            }
        }
        {
            String lhsBillingInformation;
            lhsBillingInformation = this.getBillingInformation();
            String rhsBillingInformation;
            rhsBillingInformation = that.getBillingInformation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "billingInformation", lhsBillingInformation), LocatorUtils.property(thatLocator, "billingInformation", rhsBillingInformation), lhsBillingInformation, rhsBillingInformation)) {
                return false;
            }
        }
        {
            Integer lhsChangeCount;
            lhsChangeCount = this.getChangeCount();
            Integer rhsChangeCount;
            rhsChangeCount = that.getChangeCount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "changeCount", lhsChangeCount), LocatorUtils.property(thatLocator, "changeCount", rhsChangeCount), lhsChangeCount, rhsChangeCount)) {
                return false;
            }
        }
        {
            ArrayOfStringsType lhsCompanies;
            lhsCompanies = this.getCompanies();
            ArrayOfStringsType rhsCompanies;
            rhsCompanies = that.getCompanies();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "companies", lhsCompanies), LocatorUtils.property(thatLocator, "companies", rhsCompanies), lhsCompanies, rhsCompanies)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsCompleteDate;
            lhsCompleteDate = this.getCompleteDate();
            XMLGregorianCalendar rhsCompleteDate;
            rhsCompleteDate = that.getCompleteDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "completeDate", lhsCompleteDate), LocatorUtils.property(thatLocator, "completeDate", rhsCompleteDate), lhsCompleteDate, rhsCompleteDate)) {
                return false;
            }
        }
        {
            ArrayOfStringsType lhsContacts;
            lhsContacts = this.getContacts();
            ArrayOfStringsType rhsContacts;
            rhsContacts = that.getContacts();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contacts", lhsContacts), LocatorUtils.property(thatLocator, "contacts", rhsContacts), lhsContacts, rhsContacts)) {
                return false;
            }
        }
        {
            TaskDelegateStateType lhsDelegationState;
            lhsDelegationState = this.getDelegationState();
            TaskDelegateStateType rhsDelegationState;
            rhsDelegationState = that.getDelegationState();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "delegationState", lhsDelegationState), LocatorUtils.property(thatLocator, "delegationState", rhsDelegationState), lhsDelegationState, rhsDelegationState)) {
                return false;
            }
        }
        {
            String lhsDelegator;
            lhsDelegator = this.getDelegator();
            String rhsDelegator;
            rhsDelegator = that.getDelegator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "delegator", lhsDelegator), LocatorUtils.property(thatLocator, "delegator", rhsDelegator), lhsDelegator, rhsDelegator)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDueDate;
            lhsDueDate = this.getDueDate();
            XMLGregorianCalendar rhsDueDate;
            rhsDueDate = that.getDueDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dueDate", lhsDueDate), LocatorUtils.property(thatLocator, "dueDate", rhsDueDate), lhsDueDate, rhsDueDate)) {
                return false;
            }
        }
        {
            Integer lhsIsAssignmentEditable;
            lhsIsAssignmentEditable = this.getIsAssignmentEditable();
            Integer rhsIsAssignmentEditable;
            rhsIsAssignmentEditable = that.getIsAssignmentEditable();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isAssignmentEditable", lhsIsAssignmentEditable), LocatorUtils.property(thatLocator, "isAssignmentEditable", rhsIsAssignmentEditable), lhsIsAssignmentEditable, rhsIsAssignmentEditable)) {
                return false;
            }
        }
        {
            Boolean lhsIsComplete;
            lhsIsComplete = this.isIsComplete();
            Boolean rhsIsComplete;
            rhsIsComplete = that.isIsComplete();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isComplete", lhsIsComplete), LocatorUtils.property(thatLocator, "isComplete", rhsIsComplete), lhsIsComplete, rhsIsComplete)) {
                return false;
            }
        }
        {
            Boolean lhsIsRecurring;
            lhsIsRecurring = this.isIsRecurring();
            Boolean rhsIsRecurring;
            rhsIsRecurring = that.isIsRecurring();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isRecurring", lhsIsRecurring), LocatorUtils.property(thatLocator, "isRecurring", rhsIsRecurring), lhsIsRecurring, rhsIsRecurring)) {
                return false;
            }
        }
        {
            Boolean lhsIsTeamTask;
            lhsIsTeamTask = this.isIsTeamTask();
            Boolean rhsIsTeamTask;
            rhsIsTeamTask = that.isIsTeamTask();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isTeamTask", lhsIsTeamTask), LocatorUtils.property(thatLocator, "isTeamTask", rhsIsTeamTask), lhsIsTeamTask, rhsIsTeamTask)) {
                return false;
            }
        }
        {
            String lhsMileage;
            lhsMileage = this.getMileage();
            String rhsMileage;
            rhsMileage = that.getMileage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mileage", lhsMileage), LocatorUtils.property(thatLocator, "mileage", rhsMileage), lhsMileage, rhsMileage)) {
                return false;
            }
        }
        {
            String lhsOwner;
            lhsOwner = this.getOwner();
            String rhsOwner;
            rhsOwner = that.getOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "owner", lhsOwner), LocatorUtils.property(thatLocator, "owner", rhsOwner), lhsOwner, rhsOwner)) {
                return false;
            }
        }
        {
            Double lhsPercentComplete;
            lhsPercentComplete = this.getPercentComplete();
            Double rhsPercentComplete;
            rhsPercentComplete = that.getPercentComplete();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "percentComplete", lhsPercentComplete), LocatorUtils.property(thatLocator, "percentComplete", rhsPercentComplete), lhsPercentComplete, rhsPercentComplete)) {
                return false;
            }
        }
        {
            TaskRecurrenceType lhsRecurrence;
            lhsRecurrence = this.getRecurrence();
            TaskRecurrenceType rhsRecurrence;
            rhsRecurrence = that.getRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recurrence", lhsRecurrence), LocatorUtils.property(thatLocator, "recurrence", rhsRecurrence), lhsRecurrence, rhsRecurrence)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsStartDate;
            lhsStartDate = this.getStartDate();
            XMLGregorianCalendar rhsStartDate;
            rhsStartDate = that.getStartDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "startDate", lhsStartDate), LocatorUtils.property(thatLocator, "startDate", rhsStartDate), lhsStartDate, rhsStartDate)) {
                return false;
            }
        }
        {
            TaskStatusType lhsStatus;
            lhsStatus = this.getStatus();
            TaskStatusType rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            String lhsStatusDescription;
            lhsStatusDescription = this.getStatusDescription();
            String rhsStatusDescription;
            rhsStatusDescription = that.getStatusDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "statusDescription", lhsStatusDescription), LocatorUtils.property(thatLocator, "statusDescription", rhsStatusDescription), lhsStatusDescription, rhsStatusDescription)) {
                return false;
            }
        }
        {
            Integer lhsTotalWork;
            lhsTotalWork = this.getTotalWork();
            Integer rhsTotalWork;
            rhsTotalWork = that.getTotalWork();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "totalWork", lhsTotalWork), LocatorUtils.property(thatLocator, "totalWork", rhsTotalWork), lhsTotalWork, rhsTotalWork)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Integer theActualWork;
            theActualWork = this.getActualWork();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "actualWork", theActualWork), currentHashCode, theActualWork);
        }
        {
            XMLGregorianCalendar theAssignedTime;
            theAssignedTime = this.getAssignedTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "assignedTime", theAssignedTime), currentHashCode, theAssignedTime);
        }
        {
            String theBillingInformation;
            theBillingInformation = this.getBillingInformation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "billingInformation", theBillingInformation), currentHashCode, theBillingInformation);
        }
        {
            Integer theChangeCount;
            theChangeCount = this.getChangeCount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "changeCount", theChangeCount), currentHashCode, theChangeCount);
        }
        {
            ArrayOfStringsType theCompanies;
            theCompanies = this.getCompanies();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "companies", theCompanies), currentHashCode, theCompanies);
        }
        {
            XMLGregorianCalendar theCompleteDate;
            theCompleteDate = this.getCompleteDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "completeDate", theCompleteDate), currentHashCode, theCompleteDate);
        }
        {
            ArrayOfStringsType theContacts;
            theContacts = this.getContacts();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contacts", theContacts), currentHashCode, theContacts);
        }
        {
            TaskDelegateStateType theDelegationState;
            theDelegationState = this.getDelegationState();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "delegationState", theDelegationState), currentHashCode, theDelegationState);
        }
        {
            String theDelegator;
            theDelegator = this.getDelegator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "delegator", theDelegator), currentHashCode, theDelegator);
        }
        {
            XMLGregorianCalendar theDueDate;
            theDueDate = this.getDueDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dueDate", theDueDate), currentHashCode, theDueDate);
        }
        {
            Integer theIsAssignmentEditable;
            theIsAssignmentEditable = this.getIsAssignmentEditable();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isAssignmentEditable", theIsAssignmentEditable), currentHashCode, theIsAssignmentEditable);
        }
        {
            Boolean theIsComplete;
            theIsComplete = this.isIsComplete();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isComplete", theIsComplete), currentHashCode, theIsComplete);
        }
        {
            Boolean theIsRecurring;
            theIsRecurring = this.isIsRecurring();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isRecurring", theIsRecurring), currentHashCode, theIsRecurring);
        }
        {
            Boolean theIsTeamTask;
            theIsTeamTask = this.isIsTeamTask();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isTeamTask", theIsTeamTask), currentHashCode, theIsTeamTask);
        }
        {
            String theMileage;
            theMileage = this.getMileage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mileage", theMileage), currentHashCode, theMileage);
        }
        {
            String theOwner;
            theOwner = this.getOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "owner", theOwner), currentHashCode, theOwner);
        }
        {
            Double thePercentComplete;
            thePercentComplete = this.getPercentComplete();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "percentComplete", thePercentComplete), currentHashCode, thePercentComplete);
        }
        {
            TaskRecurrenceType theRecurrence;
            theRecurrence = this.getRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recurrence", theRecurrence), currentHashCode, theRecurrence);
        }
        {
            XMLGregorianCalendar theStartDate;
            theStartDate = this.getStartDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "startDate", theStartDate), currentHashCode, theStartDate);
        }
        {
            TaskStatusType theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            String theStatusDescription;
            theStatusDescription = this.getStatusDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "statusDescription", theStatusDescription), currentHashCode, theStatusDescription);
        }
        {
            Integer theTotalWork;
            theTotalWork = this.getTotalWork();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "totalWork", theTotalWork), currentHashCode, theTotalWork);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
