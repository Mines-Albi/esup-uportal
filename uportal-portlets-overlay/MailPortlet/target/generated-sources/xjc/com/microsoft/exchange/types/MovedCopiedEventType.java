//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for MovedCopiedEventType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="MovedCopiedEventType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/services/2006/types}BaseObjectChangedEventType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="OldFolderId" type="{http://schemas.microsoft.com/exchange/services/2006/types}FolderIdType"/>
 *           &lt;element name="OldItemId" type="{http://schemas.microsoft.com/exchange/services/2006/types}ItemIdType"/>
 *         &lt;/choice>
 *         &lt;element name="OldParentFolderId" type="{http://schemas.microsoft.com/exchange/services/2006/types}FolderIdType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MovedCopiedEventType", propOrder = {
    "oldItemId",
    "oldFolderId",
    "oldParentFolderId"
})
public class MovedCopiedEventType
    extends BaseObjectChangedEventType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "OldItemId")
    protected ItemIdType oldItemId;
    @XmlElement(name = "OldFolderId")
    protected FolderIdType oldFolderId;
    @XmlElement(name = "OldParentFolderId", required = true)
    protected FolderIdType oldParentFolderId;

    /**
     * Gets the value of the oldItemId property.
     * 
     * @return
     *     possible object is
     *     {@link ItemIdType }
     *     
     */
    public ItemIdType getOldItemId() {
        return oldItemId;
    }

    /**
     * Sets the value of the oldItemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemIdType }
     *     
     */
    public void setOldItemId(ItemIdType value) {
        this.oldItemId = value;
    }

    /**
     * Gets the value of the oldFolderId property.
     * 
     * @return
     *     possible object is
     *     {@link FolderIdType }
     *     
     */
    public FolderIdType getOldFolderId() {
        return oldFolderId;
    }

    /**
     * Sets the value of the oldFolderId property.
     * 
     * @param value
     *     allowed object is
     *     {@link FolderIdType }
     *     
     */
    public void setOldFolderId(FolderIdType value) {
        this.oldFolderId = value;
    }

    /**
     * Gets the value of the oldParentFolderId property.
     * 
     * @return
     *     possible object is
     *     {@link FolderIdType }
     *     
     */
    public FolderIdType getOldParentFolderId() {
        return oldParentFolderId;
    }

    /**
     * Sets the value of the oldParentFolderId property.
     * 
     * @param value
     *     allowed object is
     *     {@link FolderIdType }
     *     
     */
    public void setOldParentFolderId(FolderIdType value) {
        this.oldParentFolderId = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ItemIdType theOldItemId;
            theOldItemId = this.getOldItemId();
            strategy.appendField(locator, this, "oldItemId", buffer, theOldItemId);
        }
        {
            FolderIdType theOldFolderId;
            theOldFolderId = this.getOldFolderId();
            strategy.appendField(locator, this, "oldFolderId", buffer, theOldFolderId);
        }
        {
            FolderIdType theOldParentFolderId;
            theOldParentFolderId = this.getOldParentFolderId();
            strategy.appendField(locator, this, "oldParentFolderId", buffer, theOldParentFolderId);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MovedCopiedEventType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MovedCopiedEventType that = ((MovedCopiedEventType) object);
        {
            ItemIdType lhsOldItemId;
            lhsOldItemId = this.getOldItemId();
            ItemIdType rhsOldItemId;
            rhsOldItemId = that.getOldItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oldItemId", lhsOldItemId), LocatorUtils.property(thatLocator, "oldItemId", rhsOldItemId), lhsOldItemId, rhsOldItemId)) {
                return false;
            }
        }
        {
            FolderIdType lhsOldFolderId;
            lhsOldFolderId = this.getOldFolderId();
            FolderIdType rhsOldFolderId;
            rhsOldFolderId = that.getOldFolderId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oldFolderId", lhsOldFolderId), LocatorUtils.property(thatLocator, "oldFolderId", rhsOldFolderId), lhsOldFolderId, rhsOldFolderId)) {
                return false;
            }
        }
        {
            FolderIdType lhsOldParentFolderId;
            lhsOldParentFolderId = this.getOldParentFolderId();
            FolderIdType rhsOldParentFolderId;
            rhsOldParentFolderId = that.getOldParentFolderId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oldParentFolderId", lhsOldParentFolderId), LocatorUtils.property(thatLocator, "oldParentFolderId", rhsOldParentFolderId), lhsOldParentFolderId, rhsOldParentFolderId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ItemIdType theOldItemId;
            theOldItemId = this.getOldItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldItemId", theOldItemId), currentHashCode, theOldItemId);
        }
        {
            FolderIdType theOldFolderId;
            theOldFolderId = this.getOldFolderId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldFolderId", theOldFolderId), currentHashCode, theOldFolderId);
        }
        {
            FolderIdType theOldParentFolderId;
            theOldParentFolderId = this.getOldParentFolderId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldParentFolderId", theOldParentFolderId), currentHashCode, theOldParentFolderId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
