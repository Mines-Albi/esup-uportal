//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for Suggestion complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Suggestion">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="MeetingTime" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *         &lt;element name="IsWorkTime" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="SuggestionQuality" type="{http://schemas.microsoft.com/exchange/services/2006/types}SuggestionQuality"/>
 *         &lt;element name="AttendeeConflictDataArray" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfAttendeeConflictData" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Suggestion", propOrder = {
    "meetingTime",
    "isWorkTime",
    "suggestionQuality",
    "attendeeConflictDataArray"
})
public class Suggestion
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "MeetingTime", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar meetingTime;
    @XmlElement(name = "IsWorkTime")
    protected boolean isWorkTime;
    @XmlElement(name = "SuggestionQuality", required = true)
    protected SuggestionQuality suggestionQuality;
    @XmlElement(name = "AttendeeConflictDataArray")
    protected ArrayOfAttendeeConflictData attendeeConflictDataArray;

    /**
     * Gets the value of the meetingTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getMeetingTime() {
        return meetingTime;
    }

    /**
     * Sets the value of the meetingTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setMeetingTime(XMLGregorianCalendar value) {
        this.meetingTime = value;
    }

    /**
     * Gets the value of the isWorkTime property.
     * 
     */
    public boolean isIsWorkTime() {
        return isWorkTime;
    }

    /**
     * Sets the value of the isWorkTime property.
     * 
     */
    public void setIsWorkTime(boolean value) {
        this.isWorkTime = value;
    }

    /**
     * Gets the value of the suggestionQuality property.
     * 
     * @return
     *     possible object is
     *     {@link SuggestionQuality }
     *     
     */
    public SuggestionQuality getSuggestionQuality() {
        return suggestionQuality;
    }

    /**
     * Sets the value of the suggestionQuality property.
     * 
     * @param value
     *     allowed object is
     *     {@link SuggestionQuality }
     *     
     */
    public void setSuggestionQuality(SuggestionQuality value) {
        this.suggestionQuality = value;
    }

    /**
     * Gets the value of the attendeeConflictDataArray property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfAttendeeConflictData }
     *     
     */
    public ArrayOfAttendeeConflictData getAttendeeConflictDataArray() {
        return attendeeConflictDataArray;
    }

    /**
     * Sets the value of the attendeeConflictDataArray property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfAttendeeConflictData }
     *     
     */
    public void setAttendeeConflictDataArray(ArrayOfAttendeeConflictData value) {
        this.attendeeConflictDataArray = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            XMLGregorianCalendar theMeetingTime;
            theMeetingTime = this.getMeetingTime();
            strategy.appendField(locator, this, "meetingTime", buffer, theMeetingTime);
        }
        {
            boolean theIsWorkTime;
            theIsWorkTime = this.isIsWorkTime();
            strategy.appendField(locator, this, "isWorkTime", buffer, theIsWorkTime);
        }
        {
            SuggestionQuality theSuggestionQuality;
            theSuggestionQuality = this.getSuggestionQuality();
            strategy.appendField(locator, this, "suggestionQuality", buffer, theSuggestionQuality);
        }
        {
            ArrayOfAttendeeConflictData theAttendeeConflictDataArray;
            theAttendeeConflictDataArray = this.getAttendeeConflictDataArray();
            strategy.appendField(locator, this, "attendeeConflictDataArray", buffer, theAttendeeConflictDataArray);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Suggestion)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Suggestion that = ((Suggestion) object);
        {
            XMLGregorianCalendar lhsMeetingTime;
            lhsMeetingTime = this.getMeetingTime();
            XMLGregorianCalendar rhsMeetingTime;
            rhsMeetingTime = that.getMeetingTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "meetingTime", lhsMeetingTime), LocatorUtils.property(thatLocator, "meetingTime", rhsMeetingTime), lhsMeetingTime, rhsMeetingTime)) {
                return false;
            }
        }
        {
            boolean lhsIsWorkTime;
            lhsIsWorkTime = this.isIsWorkTime();
            boolean rhsIsWorkTime;
            rhsIsWorkTime = that.isIsWorkTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isWorkTime", lhsIsWorkTime), LocatorUtils.property(thatLocator, "isWorkTime", rhsIsWorkTime), lhsIsWorkTime, rhsIsWorkTime)) {
                return false;
            }
        }
        {
            SuggestionQuality lhsSuggestionQuality;
            lhsSuggestionQuality = this.getSuggestionQuality();
            SuggestionQuality rhsSuggestionQuality;
            rhsSuggestionQuality = that.getSuggestionQuality();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suggestionQuality", lhsSuggestionQuality), LocatorUtils.property(thatLocator, "suggestionQuality", rhsSuggestionQuality), lhsSuggestionQuality, rhsSuggestionQuality)) {
                return false;
            }
        }
        {
            ArrayOfAttendeeConflictData lhsAttendeeConflictDataArray;
            lhsAttendeeConflictDataArray = this.getAttendeeConflictDataArray();
            ArrayOfAttendeeConflictData rhsAttendeeConflictDataArray;
            rhsAttendeeConflictDataArray = that.getAttendeeConflictDataArray();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "attendeeConflictDataArray", lhsAttendeeConflictDataArray), LocatorUtils.property(thatLocator, "attendeeConflictDataArray", rhsAttendeeConflictDataArray), lhsAttendeeConflictDataArray, rhsAttendeeConflictDataArray)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            XMLGregorianCalendar theMeetingTime;
            theMeetingTime = this.getMeetingTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "meetingTime", theMeetingTime), currentHashCode, theMeetingTime);
        }
        {
            boolean theIsWorkTime;
            theIsWorkTime = this.isIsWorkTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isWorkTime", theIsWorkTime), currentHashCode, theIsWorkTime);
        }
        {
            SuggestionQuality theSuggestionQuality;
            theSuggestionQuality = this.getSuggestionQuality();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suggestionQuality", theSuggestionQuality), currentHashCode, theSuggestionQuality);
        }
        {
            ArrayOfAttendeeConflictData theAttendeeConflictDataArray;
            theAttendeeConflictDataArray = this.getAttendeeConflictDataArray();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "attendeeConflictDataArray", theAttendeeConflictDataArray), currentHashCode, theAttendeeConflictDataArray);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
