//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for UserOofSettings complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UserOofSettings">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="OofState" type="{http://schemas.microsoft.com/exchange/services/2006/types}OofState"/>
 *         &lt;element name="ExternalAudience" type="{http://schemas.microsoft.com/exchange/services/2006/types}ExternalAudience"/>
 *         &lt;element name="Duration" type="{http://schemas.microsoft.com/exchange/services/2006/types}Duration" minOccurs="0"/>
 *         &lt;element name="InternalReply" type="{http://schemas.microsoft.com/exchange/services/2006/types}ReplyBody" minOccurs="0"/>
 *         &lt;element name="ExternalReply" type="{http://schemas.microsoft.com/exchange/services/2006/types}ReplyBody" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UserOofSettings", propOrder = {
    "oofState",
    "externalAudience",
    "duration",
    "internalReply",
    "externalReply"
})
public class UserOofSettings
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "OofState", required = true)
    protected OofState oofState;
    @XmlElement(name = "ExternalAudience", required = true)
    protected ExternalAudience externalAudience;
    @XmlElement(name = "Duration")
    protected Duration duration;
    @XmlElement(name = "InternalReply")
    protected ReplyBody internalReply;
    @XmlElement(name = "ExternalReply")
    protected ReplyBody externalReply;

    /**
     * Gets the value of the oofState property.
     * 
     * @return
     *     possible object is
     *     {@link OofState }
     *     
     */
    public OofState getOofState() {
        return oofState;
    }

    /**
     * Sets the value of the oofState property.
     * 
     * @param value
     *     allowed object is
     *     {@link OofState }
     *     
     */
    public void setOofState(OofState value) {
        this.oofState = value;
    }

    /**
     * Gets the value of the externalAudience property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalAudience }
     *     
     */
    public ExternalAudience getExternalAudience() {
        return externalAudience;
    }

    /**
     * Sets the value of the externalAudience property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalAudience }
     *     
     */
    public void setExternalAudience(ExternalAudience value) {
        this.externalAudience = value;
    }

    /**
     * Gets the value of the duration property.
     * 
     * @return
     *     possible object is
     *     {@link Duration }
     *     
     */
    public Duration getDuration() {
        return duration;
    }

    /**
     * Sets the value of the duration property.
     * 
     * @param value
     *     allowed object is
     *     {@link Duration }
     *     
     */
    public void setDuration(Duration value) {
        this.duration = value;
    }

    /**
     * Gets the value of the internalReply property.
     * 
     * @return
     *     possible object is
     *     {@link ReplyBody }
     *     
     */
    public ReplyBody getInternalReply() {
        return internalReply;
    }

    /**
     * Sets the value of the internalReply property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReplyBody }
     *     
     */
    public void setInternalReply(ReplyBody value) {
        this.internalReply = value;
    }

    /**
     * Gets the value of the externalReply property.
     * 
     * @return
     *     possible object is
     *     {@link ReplyBody }
     *     
     */
    public ReplyBody getExternalReply() {
        return externalReply;
    }

    /**
     * Sets the value of the externalReply property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReplyBody }
     *     
     */
    public void setExternalReply(ReplyBody value) {
        this.externalReply = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            OofState theOofState;
            theOofState = this.getOofState();
            strategy.appendField(locator, this, "oofState", buffer, theOofState);
        }
        {
            ExternalAudience theExternalAudience;
            theExternalAudience = this.getExternalAudience();
            strategy.appendField(locator, this, "externalAudience", buffer, theExternalAudience);
        }
        {
            Duration theDuration;
            theDuration = this.getDuration();
            strategy.appendField(locator, this, "duration", buffer, theDuration);
        }
        {
            ReplyBody theInternalReply;
            theInternalReply = this.getInternalReply();
            strategy.appendField(locator, this, "internalReply", buffer, theInternalReply);
        }
        {
            ReplyBody theExternalReply;
            theExternalReply = this.getExternalReply();
            strategy.appendField(locator, this, "externalReply", buffer, theExternalReply);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof UserOofSettings)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final UserOofSettings that = ((UserOofSettings) object);
        {
            OofState lhsOofState;
            lhsOofState = this.getOofState();
            OofState rhsOofState;
            rhsOofState = that.getOofState();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oofState", lhsOofState), LocatorUtils.property(thatLocator, "oofState", rhsOofState), lhsOofState, rhsOofState)) {
                return false;
            }
        }
        {
            ExternalAudience lhsExternalAudience;
            lhsExternalAudience = this.getExternalAudience();
            ExternalAudience rhsExternalAudience;
            rhsExternalAudience = that.getExternalAudience();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "externalAudience", lhsExternalAudience), LocatorUtils.property(thatLocator, "externalAudience", rhsExternalAudience), lhsExternalAudience, rhsExternalAudience)) {
                return false;
            }
        }
        {
            Duration lhsDuration;
            lhsDuration = this.getDuration();
            Duration rhsDuration;
            rhsDuration = that.getDuration();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                return false;
            }
        }
        {
            ReplyBody lhsInternalReply;
            lhsInternalReply = this.getInternalReply();
            ReplyBody rhsInternalReply;
            rhsInternalReply = that.getInternalReply();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "internalReply", lhsInternalReply), LocatorUtils.property(thatLocator, "internalReply", rhsInternalReply), lhsInternalReply, rhsInternalReply)) {
                return false;
            }
        }
        {
            ReplyBody lhsExternalReply;
            lhsExternalReply = this.getExternalReply();
            ReplyBody rhsExternalReply;
            rhsExternalReply = that.getExternalReply();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "externalReply", lhsExternalReply), LocatorUtils.property(thatLocator, "externalReply", rhsExternalReply), lhsExternalReply, rhsExternalReply)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            OofState theOofState;
            theOofState = this.getOofState();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oofState", theOofState), currentHashCode, theOofState);
        }
        {
            ExternalAudience theExternalAudience;
            theExternalAudience = this.getExternalAudience();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "externalAudience", theExternalAudience), currentHashCode, theExternalAudience);
        }
        {
            Duration theDuration;
            theDuration = this.getDuration();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
        }
        {
            ReplyBody theInternalReply;
            theInternalReply = this.getInternalReply();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "internalReply", theInternalReply), currentHashCode, theInternalReply);
        }
        {
            ReplyBody theExternalReply;
            theExternalReply = this.getExternalReply();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "externalReply", theExternalReply), currentHashCode, theExternalReply);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
