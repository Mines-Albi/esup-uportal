//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A permission on a folder
 * 
 * <p>Java class for PermissionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="PermissionType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/services/2006/types}BasePermissionType">
 *       &lt;sequence>
 *         &lt;element name="ReadItems" type="{http://schemas.microsoft.com/exchange/services/2006/types}PermissionReadAccessType" minOccurs="0"/>
 *         &lt;element name="PermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}PermissionLevelType"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PermissionType", propOrder = {
    "readItems",
    "permissionLevel"
})
public class PermissionType
    extends BasePermissionType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ReadItems")
    protected PermissionReadAccessType readItems;
    @XmlElement(name = "PermissionLevel", required = true)
    protected PermissionLevelType permissionLevel;

    /**
     * Gets the value of the readItems property.
     * 
     * @return
     *     possible object is
     *     {@link PermissionReadAccessType }
     *     
     */
    public PermissionReadAccessType getReadItems() {
        return readItems;
    }

    /**
     * Sets the value of the readItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermissionReadAccessType }
     *     
     */
    public void setReadItems(PermissionReadAccessType value) {
        this.readItems = value;
    }

    /**
     * Gets the value of the permissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link PermissionLevelType }
     *     
     */
    public PermissionLevelType getPermissionLevel() {
        return permissionLevel;
    }

    /**
     * Sets the value of the permissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermissionLevelType }
     *     
     */
    public void setPermissionLevel(PermissionLevelType value) {
        this.permissionLevel = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            PermissionReadAccessType theReadItems;
            theReadItems = this.getReadItems();
            strategy.appendField(locator, this, "readItems", buffer, theReadItems);
        }
        {
            PermissionLevelType thePermissionLevel;
            thePermissionLevel = this.getPermissionLevel();
            strategy.appendField(locator, this, "permissionLevel", buffer, thePermissionLevel);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof PermissionType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final PermissionType that = ((PermissionType) object);
        {
            PermissionReadAccessType lhsReadItems;
            lhsReadItems = this.getReadItems();
            PermissionReadAccessType rhsReadItems;
            rhsReadItems = that.getReadItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "readItems", lhsReadItems), LocatorUtils.property(thatLocator, "readItems", rhsReadItems), lhsReadItems, rhsReadItems)) {
                return false;
            }
        }
        {
            PermissionLevelType lhsPermissionLevel;
            lhsPermissionLevel = this.getPermissionLevel();
            PermissionLevelType rhsPermissionLevel;
            rhsPermissionLevel = that.getPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "permissionLevel", lhsPermissionLevel), LocatorUtils.property(thatLocator, "permissionLevel", rhsPermissionLevel), lhsPermissionLevel, rhsPermissionLevel)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            PermissionReadAccessType theReadItems;
            theReadItems = this.getReadItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "readItems", theReadItems), currentHashCode, theReadItems);
        }
        {
            PermissionLevelType thePermissionLevel;
            thePermissionLevel = this.getPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "permissionLevel", thePermissionLevel), currentHashCode, thePermissionLevel);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
