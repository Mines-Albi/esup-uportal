//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.autodiscover;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for UserResponse complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="UserResponse">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/2010/Autodiscover}AutodiscoverResponse">
 *       &lt;sequence>
 *         &lt;element name="RedirectTarget" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="UserSettingErrors" type="{http://schemas.microsoft.com/exchange/2010/Autodiscover}UserSettingErrors" minOccurs="0"/>
 *         &lt;element name="UserSettings" type="{http://schemas.microsoft.com/exchange/2010/Autodiscover}UserSettings" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UserResponse", propOrder = {
    "redirectTarget",
    "userSettingErrors",
    "userSettings"
})
public class UserResponse
    extends AutodiscoverResponse
    implements Equals, HashCode, ToString
{

    @XmlElementRef(name = "RedirectTarget", namespace = "http://schemas.microsoft.com/exchange/2010/Autodiscover", type = JAXBElement.class)
    protected JAXBElement<String> redirectTarget;
    @XmlElementRef(name = "UserSettingErrors", namespace = "http://schemas.microsoft.com/exchange/2010/Autodiscover", type = JAXBElement.class)
    protected JAXBElement<UserSettingErrors> userSettingErrors;
    @XmlElementRef(name = "UserSettings", namespace = "http://schemas.microsoft.com/exchange/2010/Autodiscover", type = JAXBElement.class)
    protected JAXBElement<UserSettings> userSettings;

    /**
     * Gets the value of the redirectTarget property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public JAXBElement<String> getRedirectTarget() {
        return redirectTarget;
    }

    /**
     * Sets the value of the redirectTarget property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link String }{@code >}
     *     
     */
    public void setRedirectTarget(JAXBElement<String> value) {
        this.redirectTarget = value;
    }

    /**
     * Gets the value of the userSettingErrors property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link UserSettingErrors }{@code >}
     *     
     */
    public JAXBElement<UserSettingErrors> getUserSettingErrors() {
        return userSettingErrors;
    }

    /**
     * Sets the value of the userSettingErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link UserSettingErrors }{@code >}
     *     
     */
    public void setUserSettingErrors(JAXBElement<UserSettingErrors> value) {
        this.userSettingErrors = value;
    }

    /**
     * Gets the value of the userSettings property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link UserSettings }{@code >}
     *     
     */
    public JAXBElement<UserSettings> getUserSettings() {
        return userSettings;
    }

    /**
     * Sets the value of the userSettings property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link UserSettings }{@code >}
     *     
     */
    public void setUserSettings(JAXBElement<UserSettings> value) {
        this.userSettings = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            JAXBElement<String> theRedirectTarget;
            theRedirectTarget = this.getRedirectTarget();
            strategy.appendField(locator, this, "redirectTarget", buffer, theRedirectTarget);
        }
        {
            JAXBElement<UserSettingErrors> theUserSettingErrors;
            theUserSettingErrors = this.getUserSettingErrors();
            strategy.appendField(locator, this, "userSettingErrors", buffer, theUserSettingErrors);
        }
        {
            JAXBElement<UserSettings> theUserSettings;
            theUserSettings = this.getUserSettings();
            strategy.appendField(locator, this, "userSettings", buffer, theUserSettings);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof UserResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final UserResponse that = ((UserResponse) object);
        {
            JAXBElement<String> lhsRedirectTarget;
            lhsRedirectTarget = this.getRedirectTarget();
            JAXBElement<String> rhsRedirectTarget;
            rhsRedirectTarget = that.getRedirectTarget();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "redirectTarget", lhsRedirectTarget), LocatorUtils.property(thatLocator, "redirectTarget", rhsRedirectTarget), lhsRedirectTarget, rhsRedirectTarget)) {
                return false;
            }
        }
        {
            JAXBElement<UserSettingErrors> lhsUserSettingErrors;
            lhsUserSettingErrors = this.getUserSettingErrors();
            JAXBElement<UserSettingErrors> rhsUserSettingErrors;
            rhsUserSettingErrors = that.getUserSettingErrors();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userSettingErrors", lhsUserSettingErrors), LocatorUtils.property(thatLocator, "userSettingErrors", rhsUserSettingErrors), lhsUserSettingErrors, rhsUserSettingErrors)) {
                return false;
            }
        }
        {
            JAXBElement<UserSettings> lhsUserSettings;
            lhsUserSettings = this.getUserSettings();
            JAXBElement<UserSettings> rhsUserSettings;
            rhsUserSettings = that.getUserSettings();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userSettings", lhsUserSettings), LocatorUtils.property(thatLocator, "userSettings", rhsUserSettings), lhsUserSettings, rhsUserSettings)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            JAXBElement<String> theRedirectTarget;
            theRedirectTarget = this.getRedirectTarget();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "redirectTarget", theRedirectTarget), currentHashCode, theRedirectTarget);
        }
        {
            JAXBElement<UserSettingErrors> theUserSettingErrors;
            theUserSettingErrors = this.getUserSettingErrors();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userSettingErrors", theUserSettingErrors), currentHashCode, theUserSettingErrors);
        }
        {
            JAXBElement<UserSettings> theUserSettings;
            theUserSettings = this.getUserSettings();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userSettings", theUserSettings), currentHashCode, theUserSettings);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
