//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ItemType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ItemType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="MimeContent" type="{http://schemas.microsoft.com/exchange/services/2006/types}MimeContentType" minOccurs="0"/>
 *         &lt;element name="ItemId" type="{http://schemas.microsoft.com/exchange/services/2006/types}ItemIdType" minOccurs="0"/>
 *         &lt;element name="ParentFolderId" type="{http://schemas.microsoft.com/exchange/services/2006/types}FolderIdType" minOccurs="0"/>
 *         &lt;element name="ItemClass" type="{http://schemas.microsoft.com/exchange/services/2006/types}ItemClassType" minOccurs="0"/>
 *         &lt;element name="Subject" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Sensitivity" type="{http://schemas.microsoft.com/exchange/services/2006/types}SensitivityChoicesType" minOccurs="0"/>
 *         &lt;element name="Body" type="{http://schemas.microsoft.com/exchange/services/2006/types}BodyType" minOccurs="0"/>
 *         &lt;element name="Attachments" type="{http://schemas.microsoft.com/exchange/services/2006/types}NonEmptyArrayOfAttachmentsType" minOccurs="0"/>
 *         &lt;element name="DateTimeReceived" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="Size" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/>
 *         &lt;element name="Categories" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfStringsType" minOccurs="0"/>
 *         &lt;element name="Importance" type="{http://schemas.microsoft.com/exchange/services/2006/types}ImportanceChoicesType" minOccurs="0"/>
 *         &lt;element name="InReplyTo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="IsSubmitted" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsDraft" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsFromMe" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsResend" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsUnmodified" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="InternetMessageHeaders" type="{http://schemas.microsoft.com/exchange/services/2006/types}NonEmptyArrayOfInternetHeadersType" minOccurs="0"/>
 *         &lt;element name="DateTimeSent" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="DateTimeCreated" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="ResponseObjects" type="{http://schemas.microsoft.com/exchange/services/2006/types}NonEmptyArrayOfResponseObjectsType" minOccurs="0"/>
 *         &lt;element name="ReminderDueBy" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *         &lt;element name="ReminderIsSet" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="ReminderMinutesBeforeStart" type="{http://schemas.microsoft.com/exchange/services/2006/types}ReminderMinutesBeforeStartType" minOccurs="0"/>
 *         &lt;element name="DisplayCc" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="DisplayTo" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="HasAttachments" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="ExtendedProperty" type="{http://schemas.microsoft.com/exchange/services/2006/types}ExtendedPropertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Culture" type="{http://www.w3.org/2001/XMLSchema}language" minOccurs="0"/>
 *         &lt;element name="EffectiveRights" type="{http://schemas.microsoft.com/exchange/services/2006/types}EffectiveRightsType" minOccurs="0"/>
 *         &lt;element name="LastModifiedName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="LastModifiedTime" type="{http://www.w3.org/2001/XMLSchema}dateTime" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ItemType", propOrder = {
    "mimeContent",
    "itemId",
    "parentFolderId",
    "itemClass",
    "subject",
    "sensitivity",
    "body",
    "attachments",
    "dateTimeReceived",
    "size",
    "categories",
    "importance",
    "inReplyTo",
    "isSubmitted",
    "isDraft",
    "isFromMe",
    "isResend",
    "isUnmodified",
    "internetMessageHeaders",
    "dateTimeSent",
    "dateTimeCreated",
    "responseObjects",
    "reminderDueBy",
    "reminderIsSet",
    "reminderMinutesBeforeStart",
    "displayCc",
    "displayTo",
    "hasAttachments",
    "extendedProperties",
    "culture",
    "effectiveRights",
    "lastModifiedName",
    "lastModifiedTime"
})
@XmlSeeAlso({
    CalendarItemType.class,
    TaskType.class,
    PostItemType.class,
    ContactItemType.class,
    MessageType.class,
    DistributionListType.class
})
public class ItemType implements Equals, HashCode, ToString
{

    @XmlElement(name = "MimeContent")
    protected MimeContentType mimeContent;
    @XmlElement(name = "ItemId")
    protected ItemIdType itemId;
    @XmlElement(name = "ParentFolderId")
    protected FolderIdType parentFolderId;
    @XmlElement(name = "ItemClass")
    protected String itemClass;
    @XmlElement(name = "Subject")
    protected String subject;
    @XmlElement(name = "Sensitivity")
    protected SensitivityChoicesType sensitivity;
    @XmlElement(name = "Body")
    protected BodyType body;
    @XmlElement(name = "Attachments")
    protected NonEmptyArrayOfAttachmentsType attachments;
    @XmlElement(name = "DateTimeReceived")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateTimeReceived;
    @XmlElement(name = "Size")
    protected Integer size;
    @XmlElement(name = "Categories")
    protected ArrayOfStringsType categories;
    @XmlElement(name = "Importance")
    protected ImportanceChoicesType importance;
    @XmlElement(name = "InReplyTo")
    protected String inReplyTo;
    @XmlElement(name = "IsSubmitted")
    protected Boolean isSubmitted;
    @XmlElement(name = "IsDraft")
    protected Boolean isDraft;
    @XmlElement(name = "IsFromMe")
    protected Boolean isFromMe;
    @XmlElement(name = "IsResend")
    protected Boolean isResend;
    @XmlElement(name = "IsUnmodified")
    protected Boolean isUnmodified;
    @XmlElement(name = "InternetMessageHeaders")
    protected NonEmptyArrayOfInternetHeadersType internetMessageHeaders;
    @XmlElement(name = "DateTimeSent")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateTimeSent;
    @XmlElement(name = "DateTimeCreated")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar dateTimeCreated;
    @XmlElement(name = "ResponseObjects")
    protected NonEmptyArrayOfResponseObjectsType responseObjects;
    @XmlElement(name = "ReminderDueBy")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar reminderDueBy;
    @XmlElement(name = "ReminderIsSet")
    protected Boolean reminderIsSet;
    @XmlElement(name = "ReminderMinutesBeforeStart")
    protected String reminderMinutesBeforeStart;
    @XmlElement(name = "DisplayCc")
    protected String displayCc;
    @XmlElement(name = "DisplayTo")
    protected String displayTo;
    @XmlElement(name = "HasAttachments")
    protected Boolean hasAttachments;
    @XmlElement(name = "ExtendedProperty")
    protected List<ExtendedPropertyType> extendedProperties;
    @XmlElement(name = "Culture")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected String culture;
    @XmlElement(name = "EffectiveRights")
    protected EffectiveRightsType effectiveRights;
    @XmlElement(name = "LastModifiedName")
    protected String lastModifiedName;
    @XmlElement(name = "LastModifiedTime")
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar lastModifiedTime;

    /**
     * Gets the value of the mimeContent property.
     * 
     * @return
     *     possible object is
     *     {@link MimeContentType }
     *     
     */
    public MimeContentType getMimeContent() {
        return mimeContent;
    }

    /**
     * Sets the value of the mimeContent property.
     * 
     * @param value
     *     allowed object is
     *     {@link MimeContentType }
     *     
     */
    public void setMimeContent(MimeContentType value) {
        this.mimeContent = value;
    }

    /**
     * Gets the value of the itemId property.
     * 
     * @return
     *     possible object is
     *     {@link ItemIdType }
     *     
     */
    public ItemIdType getItemId() {
        return itemId;
    }

    /**
     * Sets the value of the itemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemIdType }
     *     
     */
    public void setItemId(ItemIdType value) {
        this.itemId = value;
    }

    /**
     * Gets the value of the parentFolderId property.
     * 
     * @return
     *     possible object is
     *     {@link FolderIdType }
     *     
     */
    public FolderIdType getParentFolderId() {
        return parentFolderId;
    }

    /**
     * Sets the value of the parentFolderId property.
     * 
     * @param value
     *     allowed object is
     *     {@link FolderIdType }
     *     
     */
    public void setParentFolderId(FolderIdType value) {
        this.parentFolderId = value;
    }

    /**
     * Gets the value of the itemClass property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getItemClass() {
        return itemClass;
    }

    /**
     * Sets the value of the itemClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setItemClass(String value) {
        this.itemClass = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubject(String value) {
        this.subject = value;
    }

    /**
     * Gets the value of the sensitivity property.
     * 
     * @return
     *     possible object is
     *     {@link SensitivityChoicesType }
     *     
     */
    public SensitivityChoicesType getSensitivity() {
        return sensitivity;
    }

    /**
     * Sets the value of the sensitivity property.
     * 
     * @param value
     *     allowed object is
     *     {@link SensitivityChoicesType }
     *     
     */
    public void setSensitivity(SensitivityChoicesType value) {
        this.sensitivity = value;
    }

    /**
     * Gets the value of the body property.
     * 
     * @return
     *     possible object is
     *     {@link BodyType }
     *     
     */
    public BodyType getBody() {
        return body;
    }

    /**
     * Sets the value of the body property.
     * 
     * @param value
     *     allowed object is
     *     {@link BodyType }
     *     
     */
    public void setBody(BodyType value) {
        this.body = value;
    }

    /**
     * Gets the value of the attachments property.
     * 
     * @return
     *     possible object is
     *     {@link NonEmptyArrayOfAttachmentsType }
     *     
     */
    public NonEmptyArrayOfAttachmentsType getAttachments() {
        return attachments;
    }

    /**
     * Sets the value of the attachments property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonEmptyArrayOfAttachmentsType }
     *     
     */
    public void setAttachments(NonEmptyArrayOfAttachmentsType value) {
        this.attachments = value;
    }

    /**
     * Gets the value of the dateTimeReceived property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateTimeReceived() {
        return dateTimeReceived;
    }

    /**
     * Sets the value of the dateTimeReceived property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateTimeReceived(XMLGregorianCalendar value) {
        this.dateTimeReceived = value;
    }

    /**
     * Gets the value of the size property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getSize() {
        return size;
    }

    /**
     * Sets the value of the size property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setSize(Integer value) {
        this.size = value;
    }

    /**
     * Gets the value of the categories property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public ArrayOfStringsType getCategories() {
        return categories;
    }

    /**
     * Sets the value of the categories property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfStringsType }
     *     
     */
    public void setCategories(ArrayOfStringsType value) {
        this.categories = value;
    }

    /**
     * Gets the value of the importance property.
     * 
     * @return
     *     possible object is
     *     {@link ImportanceChoicesType }
     *     
     */
    public ImportanceChoicesType getImportance() {
        return importance;
    }

    /**
     * Sets the value of the importance property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImportanceChoicesType }
     *     
     */
    public void setImportance(ImportanceChoicesType value) {
        this.importance = value;
    }

    /**
     * Gets the value of the inReplyTo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getInReplyTo() {
        return inReplyTo;
    }

    /**
     * Sets the value of the inReplyTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInReplyTo(String value) {
        this.inReplyTo = value;
    }

    /**
     * Gets the value of the isSubmitted property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsSubmitted() {
        return isSubmitted;
    }

    /**
     * Sets the value of the isSubmitted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsSubmitted(Boolean value) {
        this.isSubmitted = value;
    }

    /**
     * Gets the value of the isDraft property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsDraft() {
        return isDraft;
    }

    /**
     * Sets the value of the isDraft property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsDraft(Boolean value) {
        this.isDraft = value;
    }

    /**
     * Gets the value of the isFromMe property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsFromMe() {
        return isFromMe;
    }

    /**
     * Sets the value of the isFromMe property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsFromMe(Boolean value) {
        this.isFromMe = value;
    }

    /**
     * Gets the value of the isResend property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsResend() {
        return isResend;
    }

    /**
     * Sets the value of the isResend property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsResend(Boolean value) {
        this.isResend = value;
    }

    /**
     * Gets the value of the isUnmodified property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsUnmodified() {
        return isUnmodified;
    }

    /**
     * Sets the value of the isUnmodified property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsUnmodified(Boolean value) {
        this.isUnmodified = value;
    }

    /**
     * Gets the value of the internetMessageHeaders property.
     * 
     * @return
     *     possible object is
     *     {@link NonEmptyArrayOfInternetHeadersType }
     *     
     */
    public NonEmptyArrayOfInternetHeadersType getInternetMessageHeaders() {
        return internetMessageHeaders;
    }

    /**
     * Sets the value of the internetMessageHeaders property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonEmptyArrayOfInternetHeadersType }
     *     
     */
    public void setInternetMessageHeaders(NonEmptyArrayOfInternetHeadersType value) {
        this.internetMessageHeaders = value;
    }

    /**
     * Gets the value of the dateTimeSent property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateTimeSent() {
        return dateTimeSent;
    }

    /**
     * Sets the value of the dateTimeSent property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateTimeSent(XMLGregorianCalendar value) {
        this.dateTimeSent = value;
    }

    /**
     * Gets the value of the dateTimeCreated property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDateTimeCreated() {
        return dateTimeCreated;
    }

    /**
     * Sets the value of the dateTimeCreated property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDateTimeCreated(XMLGregorianCalendar value) {
        this.dateTimeCreated = value;
    }

    /**
     * Gets the value of the responseObjects property.
     * 
     * @return
     *     possible object is
     *     {@link NonEmptyArrayOfResponseObjectsType }
     *     
     */
    public NonEmptyArrayOfResponseObjectsType getResponseObjects() {
        return responseObjects;
    }

    /**
     * Sets the value of the responseObjects property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonEmptyArrayOfResponseObjectsType }
     *     
     */
    public void setResponseObjects(NonEmptyArrayOfResponseObjectsType value) {
        this.responseObjects = value;
    }

    /**
     * Gets the value of the reminderDueBy property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getReminderDueBy() {
        return reminderDueBy;
    }

    /**
     * Sets the value of the reminderDueBy property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setReminderDueBy(XMLGregorianCalendar value) {
        this.reminderDueBy = value;
    }

    /**
     * Gets the value of the reminderIsSet property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isReminderIsSet() {
        return reminderIsSet;
    }

    /**
     * Sets the value of the reminderIsSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReminderIsSet(Boolean value) {
        this.reminderIsSet = value;
    }

    /**
     * Gets the value of the reminderMinutesBeforeStart property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReminderMinutesBeforeStart() {
        return reminderMinutesBeforeStart;
    }

    /**
     * Sets the value of the reminderMinutesBeforeStart property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReminderMinutesBeforeStart(String value) {
        this.reminderMinutesBeforeStart = value;
    }

    /**
     * Gets the value of the displayCc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayCc() {
        return displayCc;
    }

    /**
     * Sets the value of the displayCc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayCc(String value) {
        this.displayCc = value;
    }

    /**
     * Gets the value of the displayTo property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisplayTo() {
        return displayTo;
    }

    /**
     * Sets the value of the displayTo property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisplayTo(String value) {
        this.displayTo = value;
    }

    /**
     * Gets the value of the hasAttachments property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isHasAttachments() {
        return hasAttachments;
    }

    /**
     * Sets the value of the hasAttachments property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasAttachments(Boolean value) {
        this.hasAttachments = value;
    }

    /**
     * Gets the value of the extendedProperties property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extendedProperties property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtendedProperties().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExtendedPropertyType }
     * 
     * 
     */
    public List<ExtendedPropertyType> getExtendedProperties() {
        if (extendedProperties == null) {
            extendedProperties = new ArrayList<ExtendedPropertyType>();
        }
        return this.extendedProperties;
    }

    /**
     * Gets the value of the culture property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCulture() {
        return culture;
    }

    /**
     * Sets the value of the culture property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCulture(String value) {
        this.culture = value;
    }

    /**
     * Gets the value of the effectiveRights property.
     * 
     * @return
     *     possible object is
     *     {@link EffectiveRightsType }
     *     
     */
    public EffectiveRightsType getEffectiveRights() {
        return effectiveRights;
    }

    /**
     * Sets the value of the effectiveRights property.
     * 
     * @param value
     *     allowed object is
     *     {@link EffectiveRightsType }
     *     
     */
    public void setEffectiveRights(EffectiveRightsType value) {
        this.effectiveRights = value;
    }

    /**
     * Gets the value of the lastModifiedName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLastModifiedName() {
        return lastModifiedName;
    }

    /**
     * Sets the value of the lastModifiedName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLastModifiedName(String value) {
        this.lastModifiedName = value;
    }

    /**
     * Gets the value of the lastModifiedTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getLastModifiedTime() {
        return lastModifiedTime;
    }

    /**
     * Sets the value of the lastModifiedTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setLastModifiedTime(XMLGregorianCalendar value) {
        this.lastModifiedTime = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            MimeContentType theMimeContent;
            theMimeContent = this.getMimeContent();
            strategy.appendField(locator, this, "mimeContent", buffer, theMimeContent);
        }
        {
            ItemIdType theItemId;
            theItemId = this.getItemId();
            strategy.appendField(locator, this, "itemId", buffer, theItemId);
        }
        {
            FolderIdType theParentFolderId;
            theParentFolderId = this.getParentFolderId();
            strategy.appendField(locator, this, "parentFolderId", buffer, theParentFolderId);
        }
        {
            String theItemClass;
            theItemClass = this.getItemClass();
            strategy.appendField(locator, this, "itemClass", buffer, theItemClass);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            SensitivityChoicesType theSensitivity;
            theSensitivity = this.getSensitivity();
            strategy.appendField(locator, this, "sensitivity", buffer, theSensitivity);
        }
        {
            BodyType theBody;
            theBody = this.getBody();
            strategy.appendField(locator, this, "body", buffer, theBody);
        }
        {
            NonEmptyArrayOfAttachmentsType theAttachments;
            theAttachments = this.getAttachments();
            strategy.appendField(locator, this, "attachments", buffer, theAttachments);
        }
        {
            XMLGregorianCalendar theDateTimeReceived;
            theDateTimeReceived = this.getDateTimeReceived();
            strategy.appendField(locator, this, "dateTimeReceived", buffer, theDateTimeReceived);
        }
        {
            Integer theSize;
            theSize = this.getSize();
            strategy.appendField(locator, this, "size", buffer, theSize);
        }
        {
            ArrayOfStringsType theCategories;
            theCategories = this.getCategories();
            strategy.appendField(locator, this, "categories", buffer, theCategories);
        }
        {
            ImportanceChoicesType theImportance;
            theImportance = this.getImportance();
            strategy.appendField(locator, this, "importance", buffer, theImportance);
        }
        {
            String theInReplyTo;
            theInReplyTo = this.getInReplyTo();
            strategy.appendField(locator, this, "inReplyTo", buffer, theInReplyTo);
        }
        {
            Boolean theIsSubmitted;
            theIsSubmitted = this.isIsSubmitted();
            strategy.appendField(locator, this, "isSubmitted", buffer, theIsSubmitted);
        }
        {
            Boolean theIsDraft;
            theIsDraft = this.isIsDraft();
            strategy.appendField(locator, this, "isDraft", buffer, theIsDraft);
        }
        {
            Boolean theIsFromMe;
            theIsFromMe = this.isIsFromMe();
            strategy.appendField(locator, this, "isFromMe", buffer, theIsFromMe);
        }
        {
            Boolean theIsResend;
            theIsResend = this.isIsResend();
            strategy.appendField(locator, this, "isResend", buffer, theIsResend);
        }
        {
            Boolean theIsUnmodified;
            theIsUnmodified = this.isIsUnmodified();
            strategy.appendField(locator, this, "isUnmodified", buffer, theIsUnmodified);
        }
        {
            NonEmptyArrayOfInternetHeadersType theInternetMessageHeaders;
            theInternetMessageHeaders = this.getInternetMessageHeaders();
            strategy.appendField(locator, this, "internetMessageHeaders", buffer, theInternetMessageHeaders);
        }
        {
            XMLGregorianCalendar theDateTimeSent;
            theDateTimeSent = this.getDateTimeSent();
            strategy.appendField(locator, this, "dateTimeSent", buffer, theDateTimeSent);
        }
        {
            XMLGregorianCalendar theDateTimeCreated;
            theDateTimeCreated = this.getDateTimeCreated();
            strategy.appendField(locator, this, "dateTimeCreated", buffer, theDateTimeCreated);
        }
        {
            NonEmptyArrayOfResponseObjectsType theResponseObjects;
            theResponseObjects = this.getResponseObjects();
            strategy.appendField(locator, this, "responseObjects", buffer, theResponseObjects);
        }
        {
            XMLGregorianCalendar theReminderDueBy;
            theReminderDueBy = this.getReminderDueBy();
            strategy.appendField(locator, this, "reminderDueBy", buffer, theReminderDueBy);
        }
        {
            Boolean theReminderIsSet;
            theReminderIsSet = this.isReminderIsSet();
            strategy.appendField(locator, this, "reminderIsSet", buffer, theReminderIsSet);
        }
        {
            String theReminderMinutesBeforeStart;
            theReminderMinutesBeforeStart = this.getReminderMinutesBeforeStart();
            strategy.appendField(locator, this, "reminderMinutesBeforeStart", buffer, theReminderMinutesBeforeStart);
        }
        {
            String theDisplayCc;
            theDisplayCc = this.getDisplayCc();
            strategy.appendField(locator, this, "displayCc", buffer, theDisplayCc);
        }
        {
            String theDisplayTo;
            theDisplayTo = this.getDisplayTo();
            strategy.appendField(locator, this, "displayTo", buffer, theDisplayTo);
        }
        {
            Boolean theHasAttachments;
            theHasAttachments = this.isHasAttachments();
            strategy.appendField(locator, this, "hasAttachments", buffer, theHasAttachments);
        }
        {
            List<ExtendedPropertyType> theExtendedProperties;
            theExtendedProperties = this.getExtendedProperties();
            strategy.appendField(locator, this, "extendedProperties", buffer, theExtendedProperties);
        }
        {
            String theCulture;
            theCulture = this.getCulture();
            strategy.appendField(locator, this, "culture", buffer, theCulture);
        }
        {
            EffectiveRightsType theEffectiveRights;
            theEffectiveRights = this.getEffectiveRights();
            strategy.appendField(locator, this, "effectiveRights", buffer, theEffectiveRights);
        }
        {
            String theLastModifiedName;
            theLastModifiedName = this.getLastModifiedName();
            strategy.appendField(locator, this, "lastModifiedName", buffer, theLastModifiedName);
        }
        {
            XMLGregorianCalendar theLastModifiedTime;
            theLastModifiedTime = this.getLastModifiedTime();
            strategy.appendField(locator, this, "lastModifiedTime", buffer, theLastModifiedTime);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ItemType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ItemType that = ((ItemType) object);
        {
            MimeContentType lhsMimeContent;
            lhsMimeContent = this.getMimeContent();
            MimeContentType rhsMimeContent;
            rhsMimeContent = that.getMimeContent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mimeContent", lhsMimeContent), LocatorUtils.property(thatLocator, "mimeContent", rhsMimeContent), lhsMimeContent, rhsMimeContent)) {
                return false;
            }
        }
        {
            ItemIdType lhsItemId;
            lhsItemId = this.getItemId();
            ItemIdType rhsItemId;
            rhsItemId = that.getItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemId", lhsItemId), LocatorUtils.property(thatLocator, "itemId", rhsItemId), lhsItemId, rhsItemId)) {
                return false;
            }
        }
        {
            FolderIdType lhsParentFolderId;
            lhsParentFolderId = this.getParentFolderId();
            FolderIdType rhsParentFolderId;
            rhsParentFolderId = that.getParentFolderId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "parentFolderId", lhsParentFolderId), LocatorUtils.property(thatLocator, "parentFolderId", rhsParentFolderId), lhsParentFolderId, rhsParentFolderId)) {
                return false;
            }
        }
        {
            String lhsItemClass;
            lhsItemClass = this.getItemClass();
            String rhsItemClass;
            rhsItemClass = that.getItemClass();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemClass", lhsItemClass), LocatorUtils.property(thatLocator, "itemClass", rhsItemClass), lhsItemClass, rhsItemClass)) {
                return false;
            }
        }
        {
            String lhsSubject;
            lhsSubject = this.getSubject();
            String rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            SensitivityChoicesType lhsSensitivity;
            lhsSensitivity = this.getSensitivity();
            SensitivityChoicesType rhsSensitivity;
            rhsSensitivity = that.getSensitivity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sensitivity", lhsSensitivity), LocatorUtils.property(thatLocator, "sensitivity", rhsSensitivity), lhsSensitivity, rhsSensitivity)) {
                return false;
            }
        }
        {
            BodyType lhsBody;
            lhsBody = this.getBody();
            BodyType rhsBody;
            rhsBody = that.getBody();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "body", lhsBody), LocatorUtils.property(thatLocator, "body", rhsBody), lhsBody, rhsBody)) {
                return false;
            }
        }
        {
            NonEmptyArrayOfAttachmentsType lhsAttachments;
            lhsAttachments = this.getAttachments();
            NonEmptyArrayOfAttachmentsType rhsAttachments;
            rhsAttachments = that.getAttachments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "attachments", lhsAttachments), LocatorUtils.property(thatLocator, "attachments", rhsAttachments), lhsAttachments, rhsAttachments)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateTimeReceived;
            lhsDateTimeReceived = this.getDateTimeReceived();
            XMLGregorianCalendar rhsDateTimeReceived;
            rhsDateTimeReceived = that.getDateTimeReceived();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateTimeReceived", lhsDateTimeReceived), LocatorUtils.property(thatLocator, "dateTimeReceived", rhsDateTimeReceived), lhsDateTimeReceived, rhsDateTimeReceived)) {
                return false;
            }
        }
        {
            Integer lhsSize;
            lhsSize = this.getSize();
            Integer rhsSize;
            rhsSize = that.getSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "size", lhsSize), LocatorUtils.property(thatLocator, "size", rhsSize), lhsSize, rhsSize)) {
                return false;
            }
        }
        {
            ArrayOfStringsType lhsCategories;
            lhsCategories = this.getCategories();
            ArrayOfStringsType rhsCategories;
            rhsCategories = that.getCategories();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "categories", lhsCategories), LocatorUtils.property(thatLocator, "categories", rhsCategories), lhsCategories, rhsCategories)) {
                return false;
            }
        }
        {
            ImportanceChoicesType lhsImportance;
            lhsImportance = this.getImportance();
            ImportanceChoicesType rhsImportance;
            rhsImportance = that.getImportance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "importance", lhsImportance), LocatorUtils.property(thatLocator, "importance", rhsImportance), lhsImportance, rhsImportance)) {
                return false;
            }
        }
        {
            String lhsInReplyTo;
            lhsInReplyTo = this.getInReplyTo();
            String rhsInReplyTo;
            rhsInReplyTo = that.getInReplyTo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inReplyTo", lhsInReplyTo), LocatorUtils.property(thatLocator, "inReplyTo", rhsInReplyTo), lhsInReplyTo, rhsInReplyTo)) {
                return false;
            }
        }
        {
            Boolean lhsIsSubmitted;
            lhsIsSubmitted = this.isIsSubmitted();
            Boolean rhsIsSubmitted;
            rhsIsSubmitted = that.isIsSubmitted();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isSubmitted", lhsIsSubmitted), LocatorUtils.property(thatLocator, "isSubmitted", rhsIsSubmitted), lhsIsSubmitted, rhsIsSubmitted)) {
                return false;
            }
        }
        {
            Boolean lhsIsDraft;
            lhsIsDraft = this.isIsDraft();
            Boolean rhsIsDraft;
            rhsIsDraft = that.isIsDraft();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isDraft", lhsIsDraft), LocatorUtils.property(thatLocator, "isDraft", rhsIsDraft), lhsIsDraft, rhsIsDraft)) {
                return false;
            }
        }
        {
            Boolean lhsIsFromMe;
            lhsIsFromMe = this.isIsFromMe();
            Boolean rhsIsFromMe;
            rhsIsFromMe = that.isIsFromMe();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isFromMe", lhsIsFromMe), LocatorUtils.property(thatLocator, "isFromMe", rhsIsFromMe), lhsIsFromMe, rhsIsFromMe)) {
                return false;
            }
        }
        {
            Boolean lhsIsResend;
            lhsIsResend = this.isIsResend();
            Boolean rhsIsResend;
            rhsIsResend = that.isIsResend();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isResend", lhsIsResend), LocatorUtils.property(thatLocator, "isResend", rhsIsResend), lhsIsResend, rhsIsResend)) {
                return false;
            }
        }
        {
            Boolean lhsIsUnmodified;
            lhsIsUnmodified = this.isIsUnmodified();
            Boolean rhsIsUnmodified;
            rhsIsUnmodified = that.isIsUnmodified();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isUnmodified", lhsIsUnmodified), LocatorUtils.property(thatLocator, "isUnmodified", rhsIsUnmodified), lhsIsUnmodified, rhsIsUnmodified)) {
                return false;
            }
        }
        {
            NonEmptyArrayOfInternetHeadersType lhsInternetMessageHeaders;
            lhsInternetMessageHeaders = this.getInternetMessageHeaders();
            NonEmptyArrayOfInternetHeadersType rhsInternetMessageHeaders;
            rhsInternetMessageHeaders = that.getInternetMessageHeaders();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "internetMessageHeaders", lhsInternetMessageHeaders), LocatorUtils.property(thatLocator, "internetMessageHeaders", rhsInternetMessageHeaders), lhsInternetMessageHeaders, rhsInternetMessageHeaders)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateTimeSent;
            lhsDateTimeSent = this.getDateTimeSent();
            XMLGregorianCalendar rhsDateTimeSent;
            rhsDateTimeSent = that.getDateTimeSent();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateTimeSent", lhsDateTimeSent), LocatorUtils.property(thatLocator, "dateTimeSent", rhsDateTimeSent), lhsDateTimeSent, rhsDateTimeSent)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDateTimeCreated;
            lhsDateTimeCreated = this.getDateTimeCreated();
            XMLGregorianCalendar rhsDateTimeCreated;
            rhsDateTimeCreated = that.getDateTimeCreated();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateTimeCreated", lhsDateTimeCreated), LocatorUtils.property(thatLocator, "dateTimeCreated", rhsDateTimeCreated), lhsDateTimeCreated, rhsDateTimeCreated)) {
                return false;
            }
        }
        {
            NonEmptyArrayOfResponseObjectsType lhsResponseObjects;
            lhsResponseObjects = this.getResponseObjects();
            NonEmptyArrayOfResponseObjectsType rhsResponseObjects;
            rhsResponseObjects = that.getResponseObjects();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "responseObjects", lhsResponseObjects), LocatorUtils.property(thatLocator, "responseObjects", rhsResponseObjects), lhsResponseObjects, rhsResponseObjects)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsReminderDueBy;
            lhsReminderDueBy = this.getReminderDueBy();
            XMLGregorianCalendar rhsReminderDueBy;
            rhsReminderDueBy = that.getReminderDueBy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reminderDueBy", lhsReminderDueBy), LocatorUtils.property(thatLocator, "reminderDueBy", rhsReminderDueBy), lhsReminderDueBy, rhsReminderDueBy)) {
                return false;
            }
        }
        {
            Boolean lhsReminderIsSet;
            lhsReminderIsSet = this.isReminderIsSet();
            Boolean rhsReminderIsSet;
            rhsReminderIsSet = that.isReminderIsSet();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reminderIsSet", lhsReminderIsSet), LocatorUtils.property(thatLocator, "reminderIsSet", rhsReminderIsSet), lhsReminderIsSet, rhsReminderIsSet)) {
                return false;
            }
        }
        {
            String lhsReminderMinutesBeforeStart;
            lhsReminderMinutesBeforeStart = this.getReminderMinutesBeforeStart();
            String rhsReminderMinutesBeforeStart;
            rhsReminderMinutesBeforeStart = that.getReminderMinutesBeforeStart();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reminderMinutesBeforeStart", lhsReminderMinutesBeforeStart), LocatorUtils.property(thatLocator, "reminderMinutesBeforeStart", rhsReminderMinutesBeforeStart), lhsReminderMinutesBeforeStart, rhsReminderMinutesBeforeStart)) {
                return false;
            }
        }
        {
            String lhsDisplayCc;
            lhsDisplayCc = this.getDisplayCc();
            String rhsDisplayCc;
            rhsDisplayCc = that.getDisplayCc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayCc", lhsDisplayCc), LocatorUtils.property(thatLocator, "displayCc", rhsDisplayCc), lhsDisplayCc, rhsDisplayCc)) {
                return false;
            }
        }
        {
            String lhsDisplayTo;
            lhsDisplayTo = this.getDisplayTo();
            String rhsDisplayTo;
            rhsDisplayTo = that.getDisplayTo();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "displayTo", lhsDisplayTo), LocatorUtils.property(thatLocator, "displayTo", rhsDisplayTo), lhsDisplayTo, rhsDisplayTo)) {
                return false;
            }
        }
        {
            Boolean lhsHasAttachments;
            lhsHasAttachments = this.isHasAttachments();
            Boolean rhsHasAttachments;
            rhsHasAttachments = that.isHasAttachments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hasAttachments", lhsHasAttachments), LocatorUtils.property(thatLocator, "hasAttachments", rhsHasAttachments), lhsHasAttachments, rhsHasAttachments)) {
                return false;
            }
        }
        {
            List<ExtendedPropertyType> lhsExtendedProperties;
            lhsExtendedProperties = this.getExtendedProperties();
            List<ExtendedPropertyType> rhsExtendedProperties;
            rhsExtendedProperties = that.getExtendedProperties();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extendedProperties", lhsExtendedProperties), LocatorUtils.property(thatLocator, "extendedProperties", rhsExtendedProperties), lhsExtendedProperties, rhsExtendedProperties)) {
                return false;
            }
        }
        {
            String lhsCulture;
            lhsCulture = this.getCulture();
            String rhsCulture;
            rhsCulture = that.getCulture();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "culture", lhsCulture), LocatorUtils.property(thatLocator, "culture", rhsCulture), lhsCulture, rhsCulture)) {
                return false;
            }
        }
        {
            EffectiveRightsType lhsEffectiveRights;
            lhsEffectiveRights = this.getEffectiveRights();
            EffectiveRightsType rhsEffectiveRights;
            rhsEffectiveRights = that.getEffectiveRights();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "effectiveRights", lhsEffectiveRights), LocatorUtils.property(thatLocator, "effectiveRights", rhsEffectiveRights), lhsEffectiveRights, rhsEffectiveRights)) {
                return false;
            }
        }
        {
            String lhsLastModifiedName;
            lhsLastModifiedName = this.getLastModifiedName();
            String rhsLastModifiedName;
            rhsLastModifiedName = that.getLastModifiedName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastModifiedName", lhsLastModifiedName), LocatorUtils.property(thatLocator, "lastModifiedName", rhsLastModifiedName), lhsLastModifiedName, rhsLastModifiedName)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsLastModifiedTime;
            lhsLastModifiedTime = this.getLastModifiedTime();
            XMLGregorianCalendar rhsLastModifiedTime;
            rhsLastModifiedTime = that.getLastModifiedTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lastModifiedTime", lhsLastModifiedTime), LocatorUtils.property(thatLocator, "lastModifiedTime", rhsLastModifiedTime), lhsLastModifiedTime, rhsLastModifiedTime)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            MimeContentType theMimeContent;
            theMimeContent = this.getMimeContent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mimeContent", theMimeContent), currentHashCode, theMimeContent);
        }
        {
            ItemIdType theItemId;
            theItemId = this.getItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemId", theItemId), currentHashCode, theItemId);
        }
        {
            FolderIdType theParentFolderId;
            theParentFolderId = this.getParentFolderId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "parentFolderId", theParentFolderId), currentHashCode, theParentFolderId);
        }
        {
            String theItemClass;
            theItemClass = this.getItemClass();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemClass", theItemClass), currentHashCode, theItemClass);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            SensitivityChoicesType theSensitivity;
            theSensitivity = this.getSensitivity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sensitivity", theSensitivity), currentHashCode, theSensitivity);
        }
        {
            BodyType theBody;
            theBody = this.getBody();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "body", theBody), currentHashCode, theBody);
        }
        {
            NonEmptyArrayOfAttachmentsType theAttachments;
            theAttachments = this.getAttachments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "attachments", theAttachments), currentHashCode, theAttachments);
        }
        {
            XMLGregorianCalendar theDateTimeReceived;
            theDateTimeReceived = this.getDateTimeReceived();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateTimeReceived", theDateTimeReceived), currentHashCode, theDateTimeReceived);
        }
        {
            Integer theSize;
            theSize = this.getSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "size", theSize), currentHashCode, theSize);
        }
        {
            ArrayOfStringsType theCategories;
            theCategories = this.getCategories();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "categories", theCategories), currentHashCode, theCategories);
        }
        {
            ImportanceChoicesType theImportance;
            theImportance = this.getImportance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "importance", theImportance), currentHashCode, theImportance);
        }
        {
            String theInReplyTo;
            theInReplyTo = this.getInReplyTo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inReplyTo", theInReplyTo), currentHashCode, theInReplyTo);
        }
        {
            Boolean theIsSubmitted;
            theIsSubmitted = this.isIsSubmitted();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isSubmitted", theIsSubmitted), currentHashCode, theIsSubmitted);
        }
        {
            Boolean theIsDraft;
            theIsDraft = this.isIsDraft();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isDraft", theIsDraft), currentHashCode, theIsDraft);
        }
        {
            Boolean theIsFromMe;
            theIsFromMe = this.isIsFromMe();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isFromMe", theIsFromMe), currentHashCode, theIsFromMe);
        }
        {
            Boolean theIsResend;
            theIsResend = this.isIsResend();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isResend", theIsResend), currentHashCode, theIsResend);
        }
        {
            Boolean theIsUnmodified;
            theIsUnmodified = this.isIsUnmodified();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isUnmodified", theIsUnmodified), currentHashCode, theIsUnmodified);
        }
        {
            NonEmptyArrayOfInternetHeadersType theInternetMessageHeaders;
            theInternetMessageHeaders = this.getInternetMessageHeaders();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "internetMessageHeaders", theInternetMessageHeaders), currentHashCode, theInternetMessageHeaders);
        }
        {
            XMLGregorianCalendar theDateTimeSent;
            theDateTimeSent = this.getDateTimeSent();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateTimeSent", theDateTimeSent), currentHashCode, theDateTimeSent);
        }
        {
            XMLGregorianCalendar theDateTimeCreated;
            theDateTimeCreated = this.getDateTimeCreated();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateTimeCreated", theDateTimeCreated), currentHashCode, theDateTimeCreated);
        }
        {
            NonEmptyArrayOfResponseObjectsType theResponseObjects;
            theResponseObjects = this.getResponseObjects();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "responseObjects", theResponseObjects), currentHashCode, theResponseObjects);
        }
        {
            XMLGregorianCalendar theReminderDueBy;
            theReminderDueBy = this.getReminderDueBy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reminderDueBy", theReminderDueBy), currentHashCode, theReminderDueBy);
        }
        {
            Boolean theReminderIsSet;
            theReminderIsSet = this.isReminderIsSet();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reminderIsSet", theReminderIsSet), currentHashCode, theReminderIsSet);
        }
        {
            String theReminderMinutesBeforeStart;
            theReminderMinutesBeforeStart = this.getReminderMinutesBeforeStart();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reminderMinutesBeforeStart", theReminderMinutesBeforeStart), currentHashCode, theReminderMinutesBeforeStart);
        }
        {
            String theDisplayCc;
            theDisplayCc = this.getDisplayCc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayCc", theDisplayCc), currentHashCode, theDisplayCc);
        }
        {
            String theDisplayTo;
            theDisplayTo = this.getDisplayTo();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "displayTo", theDisplayTo), currentHashCode, theDisplayTo);
        }
        {
            Boolean theHasAttachments;
            theHasAttachments = this.isHasAttachments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hasAttachments", theHasAttachments), currentHashCode, theHasAttachments);
        }
        {
            List<ExtendedPropertyType> theExtendedProperties;
            theExtendedProperties = this.getExtendedProperties();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extendedProperties", theExtendedProperties), currentHashCode, theExtendedProperties);
        }
        {
            String theCulture;
            theCulture = this.getCulture();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "culture", theCulture), currentHashCode, theCulture);
        }
        {
            EffectiveRightsType theEffectiveRights;
            theEffectiveRights = this.getEffectiveRights();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "effectiveRights", theEffectiveRights), currentHashCode, theEffectiveRights);
        }
        {
            String theLastModifiedName;
            theLastModifiedName = this.getLastModifiedName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastModifiedName", theLastModifiedName), currentHashCode, theLastModifiedName);
        }
        {
            XMLGregorianCalendar theLastModifiedTime;
            theLastModifiedTime = this.getLastModifiedTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lastModifiedTime", theLastModifiedTime), currentHashCode, theLastModifiedTime);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
