//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for NonEmptyArrayOfResponseObjectsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NonEmptyArrayOfResponseObjectsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="AcceptItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}AcceptItemType"/>
 *         &lt;element name="TentativelyAcceptItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}TentativelyAcceptItemType"/>
 *         &lt;element name="DeclineItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}DeclineItemType"/>
 *         &lt;element name="ReplyToItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}ReplyToItemType"/>
 *         &lt;element name="ForwardItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}ForwardItemType"/>
 *         &lt;element name="ReplyAllToItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}ReplyAllToItemType"/>
 *         &lt;element name="CancelCalendarItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}CancelCalendarItemType"/>
 *         &lt;element name="RemoveItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}RemoveItemType"/>
 *         &lt;element name="SuppressReadReceipt" type="{http://schemas.microsoft.com/exchange/services/2006/types}SuppressReadReceiptType"/>
 *         &lt;element name="PostReplyItem" type="{http://schemas.microsoft.com/exchange/services/2006/types}PostReplyItemType"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NonEmptyArrayOfResponseObjectsType", propOrder = {
    "acceptItemsAndTentativelyAcceptItemsAndDeclineItems"
})
public class NonEmptyArrayOfResponseObjectsType
    implements Equals, HashCode, ToString
{

    @XmlElements({
        @XmlElement(name = "AcceptItem", type = AcceptItemType.class),
        @XmlElement(name = "TentativelyAcceptItem", type = TentativelyAcceptItemType.class),
        @XmlElement(name = "DeclineItem", type = DeclineItemType.class),
        @XmlElement(name = "ReplyToItem", type = ReplyToItemType.class),
        @XmlElement(name = "ForwardItem", type = ForwardItemType.class),
        @XmlElement(name = "ReplyAllToItem", type = ReplyAllToItemType.class),
        @XmlElement(name = "CancelCalendarItem", type = CancelCalendarItemType.class),
        @XmlElement(name = "RemoveItem", type = RemoveItemType.class),
        @XmlElement(name = "SuppressReadReceipt", type = SuppressReadReceiptType.class),
        @XmlElement(name = "PostReplyItem", type = PostReplyItemType.class)
    })
    protected List<ResponseObjectType> acceptItemsAndTentativelyAcceptItemsAndDeclineItems;

    /**
     * Gets the value of the acceptItemsAndTentativelyAcceptItemsAndDeclineItems property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the acceptItemsAndTentativelyAcceptItemsAndDeclineItems property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AcceptItemType }
     * {@link TentativelyAcceptItemType }
     * {@link DeclineItemType }
     * {@link ReplyToItemType }
     * {@link ForwardItemType }
     * {@link ReplyAllToItemType }
     * {@link CancelCalendarItemType }
     * {@link RemoveItemType }
     * {@link SuppressReadReceiptType }
     * {@link PostReplyItemType }
     * 
     * 
     */
    public List<ResponseObjectType> getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems() {
        if (acceptItemsAndTentativelyAcceptItemsAndDeclineItems == null) {
            acceptItemsAndTentativelyAcceptItemsAndDeclineItems = new ArrayList<ResponseObjectType>();
        }
        return this.acceptItemsAndTentativelyAcceptItemsAndDeclineItems;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<ResponseObjectType> theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems;
            theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems = this.getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems();
            strategy.appendField(locator, this, "acceptItemsAndTentativelyAcceptItemsAndDeclineItems", buffer, theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof NonEmptyArrayOfResponseObjectsType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final NonEmptyArrayOfResponseObjectsType that = ((NonEmptyArrayOfResponseObjectsType) object);
        {
            List<ResponseObjectType> lhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems;
            lhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems = this.getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems();
            List<ResponseObjectType> rhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems;
            rhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems = that.getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptItemsAndTentativelyAcceptItemsAndDeclineItems", lhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems), LocatorUtils.property(thatLocator, "acceptItemsAndTentativelyAcceptItemsAndDeclineItems", rhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems), lhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems, rhsAcceptItemsAndTentativelyAcceptItemsAndDeclineItems)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<ResponseObjectType> theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems;
            theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems = this.getAcceptItemsAndTentativelyAcceptItemsAndDeclineItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptItemsAndTentativelyAcceptItemsAndDeclineItems", theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems), currentHashCode, theAcceptItemsAndTentativelyAcceptItemsAndDeclineItems);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
