//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for FreeBusyView complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FreeBusyView">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="FreeBusyViewType" type="{http://schemas.microsoft.com/exchange/services/2006/types}FreeBusyViewType"/>
 *         &lt;element name="MergedFreeBusy" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="CalendarEventArray" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfCalendarEvent" minOccurs="0"/>
 *         &lt;element name="WorkingHours" type="{http://schemas.microsoft.com/exchange/services/2006/types}WorkingHours" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FreeBusyView", propOrder = {
    "freeBusyViewType",
    "mergedFreeBusy",
    "calendarEventArray",
    "workingHours"
})
public class FreeBusyView
    implements Equals, HashCode, ToString
{

    @XmlList
    @XmlElement(name = "FreeBusyViewType", required = true)
    protected List<String> freeBusyViewType;
    @XmlElement(name = "MergedFreeBusy")
    protected String mergedFreeBusy;
    @XmlElement(name = "CalendarEventArray")
    protected ArrayOfCalendarEvent calendarEventArray;
    @XmlElement(name = "WorkingHours")
    protected WorkingHours workingHours;

    /**
     * Gets the value of the freeBusyViewType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the freeBusyViewType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFreeBusyViewType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getFreeBusyViewType() {
        if (freeBusyViewType == null) {
            freeBusyViewType = new ArrayList<String>();
        }
        return this.freeBusyViewType;
    }

    /**
     * Gets the value of the mergedFreeBusy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMergedFreeBusy() {
        return mergedFreeBusy;
    }

    /**
     * Sets the value of the mergedFreeBusy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMergedFreeBusy(String value) {
        this.mergedFreeBusy = value;
    }

    /**
     * Gets the value of the calendarEventArray property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfCalendarEvent }
     *     
     */
    public ArrayOfCalendarEvent getCalendarEventArray() {
        return calendarEventArray;
    }

    /**
     * Sets the value of the calendarEventArray property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfCalendarEvent }
     *     
     */
    public void setCalendarEventArray(ArrayOfCalendarEvent value) {
        this.calendarEventArray = value;
    }

    /**
     * Gets the value of the workingHours property.
     * 
     * @return
     *     possible object is
     *     {@link WorkingHours }
     *     
     */
    public WorkingHours getWorkingHours() {
        return workingHours;
    }

    /**
     * Sets the value of the workingHours property.
     * 
     * @param value
     *     allowed object is
     *     {@link WorkingHours }
     *     
     */
    public void setWorkingHours(WorkingHours value) {
        this.workingHours = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<String> theFreeBusyViewType;
            theFreeBusyViewType = this.getFreeBusyViewType();
            strategy.appendField(locator, this, "freeBusyViewType", buffer, theFreeBusyViewType);
        }
        {
            String theMergedFreeBusy;
            theMergedFreeBusy = this.getMergedFreeBusy();
            strategy.appendField(locator, this, "mergedFreeBusy", buffer, theMergedFreeBusy);
        }
        {
            ArrayOfCalendarEvent theCalendarEventArray;
            theCalendarEventArray = this.getCalendarEventArray();
            strategy.appendField(locator, this, "calendarEventArray", buffer, theCalendarEventArray);
        }
        {
            WorkingHours theWorkingHours;
            theWorkingHours = this.getWorkingHours();
            strategy.appendField(locator, this, "workingHours", buffer, theWorkingHours);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FreeBusyView)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final FreeBusyView that = ((FreeBusyView) object);
        {
            List<String> lhsFreeBusyViewType;
            lhsFreeBusyViewType = this.getFreeBusyViewType();
            List<String> rhsFreeBusyViewType;
            rhsFreeBusyViewType = that.getFreeBusyViewType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "freeBusyViewType", lhsFreeBusyViewType), LocatorUtils.property(thatLocator, "freeBusyViewType", rhsFreeBusyViewType), lhsFreeBusyViewType, rhsFreeBusyViewType)) {
                return false;
            }
        }
        {
            String lhsMergedFreeBusy;
            lhsMergedFreeBusy = this.getMergedFreeBusy();
            String rhsMergedFreeBusy;
            rhsMergedFreeBusy = that.getMergedFreeBusy();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mergedFreeBusy", lhsMergedFreeBusy), LocatorUtils.property(thatLocator, "mergedFreeBusy", rhsMergedFreeBusy), lhsMergedFreeBusy, rhsMergedFreeBusy)) {
                return false;
            }
        }
        {
            ArrayOfCalendarEvent lhsCalendarEventArray;
            lhsCalendarEventArray = this.getCalendarEventArray();
            ArrayOfCalendarEvent rhsCalendarEventArray;
            rhsCalendarEventArray = that.getCalendarEventArray();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "calendarEventArray", lhsCalendarEventArray), LocatorUtils.property(thatLocator, "calendarEventArray", rhsCalendarEventArray), lhsCalendarEventArray, rhsCalendarEventArray)) {
                return false;
            }
        }
        {
            WorkingHours lhsWorkingHours;
            lhsWorkingHours = this.getWorkingHours();
            WorkingHours rhsWorkingHours;
            rhsWorkingHours = that.getWorkingHours();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "workingHours", lhsWorkingHours), LocatorUtils.property(thatLocator, "workingHours", rhsWorkingHours), lhsWorkingHours, rhsWorkingHours)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<String> theFreeBusyViewType;
            theFreeBusyViewType = this.getFreeBusyViewType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "freeBusyViewType", theFreeBusyViewType), currentHashCode, theFreeBusyViewType);
        }
        {
            String theMergedFreeBusy;
            theMergedFreeBusy = this.getMergedFreeBusy();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mergedFreeBusy", theMergedFreeBusy), currentHashCode, theMergedFreeBusy);
        }
        {
            ArrayOfCalendarEvent theCalendarEventArray;
            theCalendarEventArray = this.getCalendarEventArray();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "calendarEventArray", theCalendarEventArray), currentHashCode, theCalendarEventArray);
        }
        {
            WorkingHours theWorkingHours;
            theWorkingHours = this.getWorkingHours();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "workingHours", theWorkingHours), currentHashCode, theWorkingHours);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
