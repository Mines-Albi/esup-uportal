//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.messages;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.microsoft.exchange.types.ArrayOfUserIdType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GetDelegateType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetDelegateType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/services/2006/messages}BaseDelegateType">
 *       &lt;sequence>
 *         &lt;element name="UserIds" type="{http://schemas.microsoft.com/exchange/services/2006/types}ArrayOfUserIdType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="IncludePermissions" use="required" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetDelegateType", propOrder = {
    "userIds"
})
@XmlRootElement(name = "GetDelegate")
public class GetDelegate
    extends BaseDelegateType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "UserIds")
    protected ArrayOfUserIdType userIds;
    @XmlAttribute(name = "IncludePermissions", required = true)
    protected boolean includePermissions;

    /**
     * Gets the value of the userIds property.
     * 
     * @return
     *     possible object is
     *     {@link ArrayOfUserIdType }
     *     
     */
    public ArrayOfUserIdType getUserIds() {
        return userIds;
    }

    /**
     * Sets the value of the userIds property.
     * 
     * @param value
     *     allowed object is
     *     {@link ArrayOfUserIdType }
     *     
     */
    public void setUserIds(ArrayOfUserIdType value) {
        this.userIds = value;
    }

    /**
     * Gets the value of the includePermissions property.
     * 
     */
    public boolean isIncludePermissions() {
        return includePermissions;
    }

    /**
     * Sets the value of the includePermissions property.
     * 
     */
    public void setIncludePermissions(boolean value) {
        this.includePermissions = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ArrayOfUserIdType theUserIds;
            theUserIds = this.getUserIds();
            strategy.appendField(locator, this, "userIds", buffer, theUserIds);
        }
        {
            boolean theIncludePermissions;
            theIncludePermissions = this.isIncludePermissions();
            strategy.appendField(locator, this, "includePermissions", buffer, theIncludePermissions);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GetDelegate)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final GetDelegate that = ((GetDelegate) object);
        {
            ArrayOfUserIdType lhsUserIds;
            lhsUserIds = this.getUserIds();
            ArrayOfUserIdType rhsUserIds;
            rhsUserIds = that.getUserIds();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userIds", lhsUserIds), LocatorUtils.property(thatLocator, "userIds", rhsUserIds), lhsUserIds, rhsUserIds)) {
                return false;
            }
        }
        {
            boolean lhsIncludePermissions;
            lhsIncludePermissions = this.isIncludePermissions();
            boolean rhsIncludePermissions;
            rhsIncludePermissions = that.isIncludePermissions();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "includePermissions", lhsIncludePermissions), LocatorUtils.property(thatLocator, "includePermissions", rhsIncludePermissions), lhsIncludePermissions, rhsIncludePermissions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            ArrayOfUserIdType theUserIds;
            theUserIds = this.getUserIds();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userIds", theUserIds), currentHashCode, theUserIds);
        }
        {
            boolean theIncludePermissions;
            theIncludePermissions = this.isIncludePermissions();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "includePermissions", theIncludePermissions), currentHashCode, theIncludePermissions);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
