//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RecurrenceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RecurrenceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://schemas.microsoft.com/exchange/services/2006/types}RecurrencePatternTypes"/>
 *         &lt;group ref="{http://schemas.microsoft.com/exchange/services/2006/types}RecurrenceRangeTypes"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RecurrenceType", propOrder = {
    "dailyRecurrence",
    "weeklyRecurrence",
    "absoluteMonthlyRecurrence",
    "relativeMonthlyRecurrence",
    "absoluteYearlyRecurrence",
    "relativeYearlyRecurrence",
    "numberedRecurrence",
    "endDateRecurrence",
    "noEndRecurrence"
})
public class RecurrenceType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "DailyRecurrence")
    protected DailyRecurrencePatternType dailyRecurrence;
    @XmlElement(name = "WeeklyRecurrence")
    protected WeeklyRecurrencePatternType weeklyRecurrence;
    @XmlElement(name = "AbsoluteMonthlyRecurrence")
    protected AbsoluteMonthlyRecurrencePatternType absoluteMonthlyRecurrence;
    @XmlElement(name = "RelativeMonthlyRecurrence")
    protected RelativeMonthlyRecurrencePatternType relativeMonthlyRecurrence;
    @XmlElement(name = "AbsoluteYearlyRecurrence")
    protected AbsoluteYearlyRecurrencePatternType absoluteYearlyRecurrence;
    @XmlElement(name = "RelativeYearlyRecurrence")
    protected RelativeYearlyRecurrencePatternType relativeYearlyRecurrence;
    @XmlElement(name = "NumberedRecurrence")
    protected NumberedRecurrenceRangeType numberedRecurrence;
    @XmlElement(name = "EndDateRecurrence")
    protected EndDateRecurrenceRangeType endDateRecurrence;
    @XmlElement(name = "NoEndRecurrence")
    protected NoEndRecurrenceRangeType noEndRecurrence;

    /**
     * Gets the value of the dailyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link DailyRecurrencePatternType }
     *     
     */
    public DailyRecurrencePatternType getDailyRecurrence() {
        return dailyRecurrence;
    }

    /**
     * Sets the value of the dailyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link DailyRecurrencePatternType }
     *     
     */
    public void setDailyRecurrence(DailyRecurrencePatternType value) {
        this.dailyRecurrence = value;
    }

    /**
     * Gets the value of the weeklyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link WeeklyRecurrencePatternType }
     *     
     */
    public WeeklyRecurrencePatternType getWeeklyRecurrence() {
        return weeklyRecurrence;
    }

    /**
     * Sets the value of the weeklyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link WeeklyRecurrencePatternType }
     *     
     */
    public void setWeeklyRecurrence(WeeklyRecurrencePatternType value) {
        this.weeklyRecurrence = value;
    }

    /**
     * Gets the value of the absoluteMonthlyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link AbsoluteMonthlyRecurrencePatternType }
     *     
     */
    public AbsoluteMonthlyRecurrencePatternType getAbsoluteMonthlyRecurrence() {
        return absoluteMonthlyRecurrence;
    }

    /**
     * Sets the value of the absoluteMonthlyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbsoluteMonthlyRecurrencePatternType }
     *     
     */
    public void setAbsoluteMonthlyRecurrence(AbsoluteMonthlyRecurrencePatternType value) {
        this.absoluteMonthlyRecurrence = value;
    }

    /**
     * Gets the value of the relativeMonthlyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link RelativeMonthlyRecurrencePatternType }
     *     
     */
    public RelativeMonthlyRecurrencePatternType getRelativeMonthlyRecurrence() {
        return relativeMonthlyRecurrence;
    }

    /**
     * Sets the value of the relativeMonthlyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link RelativeMonthlyRecurrencePatternType }
     *     
     */
    public void setRelativeMonthlyRecurrence(RelativeMonthlyRecurrencePatternType value) {
        this.relativeMonthlyRecurrence = value;
    }

    /**
     * Gets the value of the absoluteYearlyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link AbsoluteYearlyRecurrencePatternType }
     *     
     */
    public AbsoluteYearlyRecurrencePatternType getAbsoluteYearlyRecurrence() {
        return absoluteYearlyRecurrence;
    }

    /**
     * Sets the value of the absoluteYearlyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link AbsoluteYearlyRecurrencePatternType }
     *     
     */
    public void setAbsoluteYearlyRecurrence(AbsoluteYearlyRecurrencePatternType value) {
        this.absoluteYearlyRecurrence = value;
    }

    /**
     * Gets the value of the relativeYearlyRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link RelativeYearlyRecurrencePatternType }
     *     
     */
    public RelativeYearlyRecurrencePatternType getRelativeYearlyRecurrence() {
        return relativeYearlyRecurrence;
    }

    /**
     * Sets the value of the relativeYearlyRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link RelativeYearlyRecurrencePatternType }
     *     
     */
    public void setRelativeYearlyRecurrence(RelativeYearlyRecurrencePatternType value) {
        this.relativeYearlyRecurrence = value;
    }

    /**
     * Gets the value of the numberedRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link NumberedRecurrenceRangeType }
     *     
     */
    public NumberedRecurrenceRangeType getNumberedRecurrence() {
        return numberedRecurrence;
    }

    /**
     * Sets the value of the numberedRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link NumberedRecurrenceRangeType }
     *     
     */
    public void setNumberedRecurrence(NumberedRecurrenceRangeType value) {
        this.numberedRecurrence = value;
    }

    /**
     * Gets the value of the endDateRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link EndDateRecurrenceRangeType }
     *     
     */
    public EndDateRecurrenceRangeType getEndDateRecurrence() {
        return endDateRecurrence;
    }

    /**
     * Sets the value of the endDateRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link EndDateRecurrenceRangeType }
     *     
     */
    public void setEndDateRecurrence(EndDateRecurrenceRangeType value) {
        this.endDateRecurrence = value;
    }

    /**
     * Gets the value of the noEndRecurrence property.
     * 
     * @return
     *     possible object is
     *     {@link NoEndRecurrenceRangeType }
     *     
     */
    public NoEndRecurrenceRangeType getNoEndRecurrence() {
        return noEndRecurrence;
    }

    /**
     * Sets the value of the noEndRecurrence property.
     * 
     * @param value
     *     allowed object is
     *     {@link NoEndRecurrenceRangeType }
     *     
     */
    public void setNoEndRecurrence(NoEndRecurrenceRangeType value) {
        this.noEndRecurrence = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DailyRecurrencePatternType theDailyRecurrence;
            theDailyRecurrence = this.getDailyRecurrence();
            strategy.appendField(locator, this, "dailyRecurrence", buffer, theDailyRecurrence);
        }
        {
            WeeklyRecurrencePatternType theWeeklyRecurrence;
            theWeeklyRecurrence = this.getWeeklyRecurrence();
            strategy.appendField(locator, this, "weeklyRecurrence", buffer, theWeeklyRecurrence);
        }
        {
            AbsoluteMonthlyRecurrencePatternType theAbsoluteMonthlyRecurrence;
            theAbsoluteMonthlyRecurrence = this.getAbsoluteMonthlyRecurrence();
            strategy.appendField(locator, this, "absoluteMonthlyRecurrence", buffer, theAbsoluteMonthlyRecurrence);
        }
        {
            RelativeMonthlyRecurrencePatternType theRelativeMonthlyRecurrence;
            theRelativeMonthlyRecurrence = this.getRelativeMonthlyRecurrence();
            strategy.appendField(locator, this, "relativeMonthlyRecurrence", buffer, theRelativeMonthlyRecurrence);
        }
        {
            AbsoluteYearlyRecurrencePatternType theAbsoluteYearlyRecurrence;
            theAbsoluteYearlyRecurrence = this.getAbsoluteYearlyRecurrence();
            strategy.appendField(locator, this, "absoluteYearlyRecurrence", buffer, theAbsoluteYearlyRecurrence);
        }
        {
            RelativeYearlyRecurrencePatternType theRelativeYearlyRecurrence;
            theRelativeYearlyRecurrence = this.getRelativeYearlyRecurrence();
            strategy.appendField(locator, this, "relativeYearlyRecurrence", buffer, theRelativeYearlyRecurrence);
        }
        {
            NumberedRecurrenceRangeType theNumberedRecurrence;
            theNumberedRecurrence = this.getNumberedRecurrence();
            strategy.appendField(locator, this, "numberedRecurrence", buffer, theNumberedRecurrence);
        }
        {
            EndDateRecurrenceRangeType theEndDateRecurrence;
            theEndDateRecurrence = this.getEndDateRecurrence();
            strategy.appendField(locator, this, "endDateRecurrence", buffer, theEndDateRecurrence);
        }
        {
            NoEndRecurrenceRangeType theNoEndRecurrence;
            theNoEndRecurrence = this.getNoEndRecurrence();
            strategy.appendField(locator, this, "noEndRecurrence", buffer, theNoEndRecurrence);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RecurrenceType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RecurrenceType that = ((RecurrenceType) object);
        {
            DailyRecurrencePatternType lhsDailyRecurrence;
            lhsDailyRecurrence = this.getDailyRecurrence();
            DailyRecurrencePatternType rhsDailyRecurrence;
            rhsDailyRecurrence = that.getDailyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dailyRecurrence", lhsDailyRecurrence), LocatorUtils.property(thatLocator, "dailyRecurrence", rhsDailyRecurrence), lhsDailyRecurrence, rhsDailyRecurrence)) {
                return false;
            }
        }
        {
            WeeklyRecurrencePatternType lhsWeeklyRecurrence;
            lhsWeeklyRecurrence = this.getWeeklyRecurrence();
            WeeklyRecurrencePatternType rhsWeeklyRecurrence;
            rhsWeeklyRecurrence = that.getWeeklyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "weeklyRecurrence", lhsWeeklyRecurrence), LocatorUtils.property(thatLocator, "weeklyRecurrence", rhsWeeklyRecurrence), lhsWeeklyRecurrence, rhsWeeklyRecurrence)) {
                return false;
            }
        }
        {
            AbsoluteMonthlyRecurrencePatternType lhsAbsoluteMonthlyRecurrence;
            lhsAbsoluteMonthlyRecurrence = this.getAbsoluteMonthlyRecurrence();
            AbsoluteMonthlyRecurrencePatternType rhsAbsoluteMonthlyRecurrence;
            rhsAbsoluteMonthlyRecurrence = that.getAbsoluteMonthlyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "absoluteMonthlyRecurrence", lhsAbsoluteMonthlyRecurrence), LocatorUtils.property(thatLocator, "absoluteMonthlyRecurrence", rhsAbsoluteMonthlyRecurrence), lhsAbsoluteMonthlyRecurrence, rhsAbsoluteMonthlyRecurrence)) {
                return false;
            }
        }
        {
            RelativeMonthlyRecurrencePatternType lhsRelativeMonthlyRecurrence;
            lhsRelativeMonthlyRecurrence = this.getRelativeMonthlyRecurrence();
            RelativeMonthlyRecurrencePatternType rhsRelativeMonthlyRecurrence;
            rhsRelativeMonthlyRecurrence = that.getRelativeMonthlyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relativeMonthlyRecurrence", lhsRelativeMonthlyRecurrence), LocatorUtils.property(thatLocator, "relativeMonthlyRecurrence", rhsRelativeMonthlyRecurrence), lhsRelativeMonthlyRecurrence, rhsRelativeMonthlyRecurrence)) {
                return false;
            }
        }
        {
            AbsoluteYearlyRecurrencePatternType lhsAbsoluteYearlyRecurrence;
            lhsAbsoluteYearlyRecurrence = this.getAbsoluteYearlyRecurrence();
            AbsoluteYearlyRecurrencePatternType rhsAbsoluteYearlyRecurrence;
            rhsAbsoluteYearlyRecurrence = that.getAbsoluteYearlyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "absoluteYearlyRecurrence", lhsAbsoluteYearlyRecurrence), LocatorUtils.property(thatLocator, "absoluteYearlyRecurrence", rhsAbsoluteYearlyRecurrence), lhsAbsoluteYearlyRecurrence, rhsAbsoluteYearlyRecurrence)) {
                return false;
            }
        }
        {
            RelativeYearlyRecurrencePatternType lhsRelativeYearlyRecurrence;
            lhsRelativeYearlyRecurrence = this.getRelativeYearlyRecurrence();
            RelativeYearlyRecurrencePatternType rhsRelativeYearlyRecurrence;
            rhsRelativeYearlyRecurrence = that.getRelativeYearlyRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relativeYearlyRecurrence", lhsRelativeYearlyRecurrence), LocatorUtils.property(thatLocator, "relativeYearlyRecurrence", rhsRelativeYearlyRecurrence), lhsRelativeYearlyRecurrence, rhsRelativeYearlyRecurrence)) {
                return false;
            }
        }
        {
            NumberedRecurrenceRangeType lhsNumberedRecurrence;
            lhsNumberedRecurrence = this.getNumberedRecurrence();
            NumberedRecurrenceRangeType rhsNumberedRecurrence;
            rhsNumberedRecurrence = that.getNumberedRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numberedRecurrence", lhsNumberedRecurrence), LocatorUtils.property(thatLocator, "numberedRecurrence", rhsNumberedRecurrence), lhsNumberedRecurrence, rhsNumberedRecurrence)) {
                return false;
            }
        }
        {
            EndDateRecurrenceRangeType lhsEndDateRecurrence;
            lhsEndDateRecurrence = this.getEndDateRecurrence();
            EndDateRecurrenceRangeType rhsEndDateRecurrence;
            rhsEndDateRecurrence = that.getEndDateRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "endDateRecurrence", lhsEndDateRecurrence), LocatorUtils.property(thatLocator, "endDateRecurrence", rhsEndDateRecurrence), lhsEndDateRecurrence, rhsEndDateRecurrence)) {
                return false;
            }
        }
        {
            NoEndRecurrenceRangeType lhsNoEndRecurrence;
            lhsNoEndRecurrence = this.getNoEndRecurrence();
            NoEndRecurrenceRangeType rhsNoEndRecurrence;
            rhsNoEndRecurrence = that.getNoEndRecurrence();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noEndRecurrence", lhsNoEndRecurrence), LocatorUtils.property(thatLocator, "noEndRecurrence", rhsNoEndRecurrence), lhsNoEndRecurrence, rhsNoEndRecurrence)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DailyRecurrencePatternType theDailyRecurrence;
            theDailyRecurrence = this.getDailyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dailyRecurrence", theDailyRecurrence), currentHashCode, theDailyRecurrence);
        }
        {
            WeeklyRecurrencePatternType theWeeklyRecurrence;
            theWeeklyRecurrence = this.getWeeklyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weeklyRecurrence", theWeeklyRecurrence), currentHashCode, theWeeklyRecurrence);
        }
        {
            AbsoluteMonthlyRecurrencePatternType theAbsoluteMonthlyRecurrence;
            theAbsoluteMonthlyRecurrence = this.getAbsoluteMonthlyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "absoluteMonthlyRecurrence", theAbsoluteMonthlyRecurrence), currentHashCode, theAbsoluteMonthlyRecurrence);
        }
        {
            RelativeMonthlyRecurrencePatternType theRelativeMonthlyRecurrence;
            theRelativeMonthlyRecurrence = this.getRelativeMonthlyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relativeMonthlyRecurrence", theRelativeMonthlyRecurrence), currentHashCode, theRelativeMonthlyRecurrence);
        }
        {
            AbsoluteYearlyRecurrencePatternType theAbsoluteYearlyRecurrence;
            theAbsoluteYearlyRecurrence = this.getAbsoluteYearlyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "absoluteYearlyRecurrence", theAbsoluteYearlyRecurrence), currentHashCode, theAbsoluteYearlyRecurrence);
        }
        {
            RelativeYearlyRecurrencePatternType theRelativeYearlyRecurrence;
            theRelativeYearlyRecurrence = this.getRelativeYearlyRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relativeYearlyRecurrence", theRelativeYearlyRecurrence), currentHashCode, theRelativeYearlyRecurrence);
        }
        {
            NumberedRecurrenceRangeType theNumberedRecurrence;
            theNumberedRecurrence = this.getNumberedRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numberedRecurrence", theNumberedRecurrence), currentHashCode, theNumberedRecurrence);
        }
        {
            EndDateRecurrenceRangeType theEndDateRecurrence;
            theEndDateRecurrence = this.getEndDateRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "endDateRecurrence", theEndDateRecurrence), currentHashCode, theEndDateRecurrence);
        }
        {
            NoEndRecurrenceRangeType theNoEndRecurrence;
            theNoEndRecurrence = this.getNoEndRecurrence();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noEndRecurrence", theNoEndRecurrence), currentHashCode, theNoEndRecurrence);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
