//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.autodiscover;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GetUserSettingsRequest complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetUserSettingsRequest">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.microsoft.com/exchange/2010/Autodiscover}AutodiscoverRequest">
 *       &lt;sequence>
 *         &lt;element name="Users" type="{http://schemas.microsoft.com/exchange/2010/Autodiscover}Users"/>
 *         &lt;element name="RequestedSettings" type="{http://schemas.microsoft.com/exchange/2010/Autodiscover}RequestedSettings"/>
 *         &lt;element name="RequestedVersion" type="{http://schemas.microsoft.com/exchange/2010/Autodiscover}ExchangeVersion"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetUserSettingsRequest", propOrder = {
    "users",
    "requestedSettings",
    "requestedVersion"
})
public class GetUserSettingsRequest
    extends AutodiscoverRequest
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "Users", required = true, nillable = true)
    protected Users users;
    @XmlElement(name = "RequestedSettings", required = true, nillable = true)
    protected RequestedSettings requestedSettings;
    @XmlElement(name = "RequestedVersion", required = true, nillable = true)
    protected ExchangeVersion requestedVersion;

    /**
     * Gets the value of the users property.
     * 
     * @return
     *     possible object is
     *     {@link Users }
     *     
     */
    public Users getUsers() {
        return users;
    }

    /**
     * Sets the value of the users property.
     * 
     * @param value
     *     allowed object is
     *     {@link Users }
     *     
     */
    public void setUsers(Users value) {
        this.users = value;
    }

    /**
     * Gets the value of the requestedSettings property.
     * 
     * @return
     *     possible object is
     *     {@link RequestedSettings }
     *     
     */
    public RequestedSettings getRequestedSettings() {
        return requestedSettings;
    }

    /**
     * Sets the value of the requestedSettings property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestedSettings }
     *     
     */
    public void setRequestedSettings(RequestedSettings value) {
        this.requestedSettings = value;
    }

    /**
     * Gets the value of the requestedVersion property.
     * 
     * @return
     *     possible object is
     *     {@link ExchangeVersion }
     *     
     */
    public ExchangeVersion getRequestedVersion() {
        return requestedVersion;
    }

    /**
     * Sets the value of the requestedVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExchangeVersion }
     *     
     */
    public void setRequestedVersion(ExchangeVersion value) {
        this.requestedVersion = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Users theUsers;
            theUsers = this.getUsers();
            strategy.appendField(locator, this, "users", buffer, theUsers);
        }
        {
            RequestedSettings theRequestedSettings;
            theRequestedSettings = this.getRequestedSettings();
            strategy.appendField(locator, this, "requestedSettings", buffer, theRequestedSettings);
        }
        {
            ExchangeVersion theRequestedVersion;
            theRequestedVersion = this.getRequestedVersion();
            strategy.appendField(locator, this, "requestedVersion", buffer, theRequestedVersion);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GetUserSettingsRequest)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final GetUserSettingsRequest that = ((GetUserSettingsRequest) object);
        {
            Users lhsUsers;
            lhsUsers = this.getUsers();
            Users rhsUsers;
            rhsUsers = that.getUsers();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "users", lhsUsers), LocatorUtils.property(thatLocator, "users", rhsUsers), lhsUsers, rhsUsers)) {
                return false;
            }
        }
        {
            RequestedSettings lhsRequestedSettings;
            lhsRequestedSettings = this.getRequestedSettings();
            RequestedSettings rhsRequestedSettings;
            rhsRequestedSettings = that.getRequestedSettings();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestedSettings", lhsRequestedSettings), LocatorUtils.property(thatLocator, "requestedSettings", rhsRequestedSettings), lhsRequestedSettings, rhsRequestedSettings)) {
                return false;
            }
        }
        {
            ExchangeVersion lhsRequestedVersion;
            lhsRequestedVersion = this.getRequestedVersion();
            ExchangeVersion rhsRequestedVersion;
            rhsRequestedVersion = that.getRequestedVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestedVersion", lhsRequestedVersion), LocatorUtils.property(thatLocator, "requestedVersion", rhsRequestedVersion), lhsRequestedVersion, rhsRequestedVersion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Users theUsers;
            theUsers = this.getUsers();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "users", theUsers), currentHashCode, theUsers);
        }
        {
            RequestedSettings theRequestedSettings;
            theRequestedSettings = this.getRequestedSettings();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestedSettings", theRequestedSettings), currentHashCode, theRequestedSettings);
        }
        {
            ExchangeVersion theRequestedVersion;
            theRequestedVersion = this.getRequestedVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestedVersion", theRequestedVersion), currentHashCode, theRequestedVersion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
