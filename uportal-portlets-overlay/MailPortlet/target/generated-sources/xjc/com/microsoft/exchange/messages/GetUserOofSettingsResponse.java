//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.messages;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.microsoft.exchange.types.ExternalAudience;
import com.microsoft.exchange.types.UserOofSettings;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for GetUserOofSettingsResponse complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="GetUserOofSettingsResponse">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ResponseMessage" type="{http://schemas.microsoft.com/exchange/services/2006/messages}ResponseMessageType"/>
 *         &lt;element ref="{http://schemas.microsoft.com/exchange/services/2006/types}OofSettings" minOccurs="0"/>
 *         &lt;element name="AllowExternalOof" type="{http://schemas.microsoft.com/exchange/services/2006/types}ExternalAudience" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GetUserOofSettingsResponse", propOrder = {
    "responseMessage",
    "oofSettings",
    "allowExternalOof"
})
@XmlRootElement(name = "GetUserOofSettingsResponse")
public class GetUserOofSettingsResponse
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ResponseMessage", required = true)
    protected ResponseMessageType responseMessage;
    @XmlElement(name = "OofSettings", namespace = "http://schemas.microsoft.com/exchange/services/2006/types")
    protected UserOofSettings oofSettings;
    @XmlElement(name = "AllowExternalOof")
    protected ExternalAudience allowExternalOof;

    /**
     * Gets the value of the responseMessage property.
     * 
     * @return
     *     possible object is
     *     {@link ResponseMessageType }
     *     
     */
    public ResponseMessageType getResponseMessage() {
        return responseMessage;
    }

    /**
     * Sets the value of the responseMessage property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResponseMessageType }
     *     
     */
    public void setResponseMessage(ResponseMessageType value) {
        this.responseMessage = value;
    }

    /**
     * Gets the value of the oofSettings property.
     * 
     * @return
     *     possible object is
     *     {@link UserOofSettings }
     *     
     */
    public UserOofSettings getOofSettings() {
        return oofSettings;
    }

    /**
     * Sets the value of the oofSettings property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserOofSettings }
     *     
     */
    public void setOofSettings(UserOofSettings value) {
        this.oofSettings = value;
    }

    /**
     * Gets the value of the allowExternalOof property.
     * 
     * @return
     *     possible object is
     *     {@link ExternalAudience }
     *     
     */
    public ExternalAudience getAllowExternalOof() {
        return allowExternalOof;
    }

    /**
     * Sets the value of the allowExternalOof property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExternalAudience }
     *     
     */
    public void setAllowExternalOof(ExternalAudience value) {
        this.allowExternalOof = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ResponseMessageType theResponseMessage;
            theResponseMessage = this.getResponseMessage();
            strategy.appendField(locator, this, "responseMessage", buffer, theResponseMessage);
        }
        {
            UserOofSettings theOofSettings;
            theOofSettings = this.getOofSettings();
            strategy.appendField(locator, this, "oofSettings", buffer, theOofSettings);
        }
        {
            ExternalAudience theAllowExternalOof;
            theAllowExternalOof = this.getAllowExternalOof();
            strategy.appendField(locator, this, "allowExternalOof", buffer, theAllowExternalOof);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof GetUserOofSettingsResponse)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final GetUserOofSettingsResponse that = ((GetUserOofSettingsResponse) object);
        {
            ResponseMessageType lhsResponseMessage;
            lhsResponseMessage = this.getResponseMessage();
            ResponseMessageType rhsResponseMessage;
            rhsResponseMessage = that.getResponseMessage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "responseMessage", lhsResponseMessage), LocatorUtils.property(thatLocator, "responseMessage", rhsResponseMessage), lhsResponseMessage, rhsResponseMessage)) {
                return false;
            }
        }
        {
            UserOofSettings lhsOofSettings;
            lhsOofSettings = this.getOofSettings();
            UserOofSettings rhsOofSettings;
            rhsOofSettings = that.getOofSettings();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "oofSettings", lhsOofSettings), LocatorUtils.property(thatLocator, "oofSettings", rhsOofSettings), lhsOofSettings, rhsOofSettings)) {
                return false;
            }
        }
        {
            ExternalAudience lhsAllowExternalOof;
            lhsAllowExternalOof = this.getAllowExternalOof();
            ExternalAudience rhsAllowExternalOof;
            rhsAllowExternalOof = that.getAllowExternalOof();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "allowExternalOof", lhsAllowExternalOof), LocatorUtils.property(thatLocator, "allowExternalOof", rhsAllowExternalOof), lhsAllowExternalOof, rhsAllowExternalOof)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ResponseMessageType theResponseMessage;
            theResponseMessage = this.getResponseMessage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "responseMessage", theResponseMessage), currentHashCode, theResponseMessage);
        }
        {
            UserOofSettings theOofSettings;
            theOofSettings = this.getOofSettings();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oofSettings", theOofSettings), currentHashCode, theOofSettings);
        }
        {
            ExternalAudience theAllowExternalOof;
            theAllowExternalOof = this.getAllowExternalOof();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "allowExternalOof", theAllowExternalOof), currentHashCode, theAllowExternalOof);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
