//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.18 at 02:30:12 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for CalendarEventDetails complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CalendarEventDetails">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ID" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Subject" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Location" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="IsMeeting" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="IsRecurring" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="IsException" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="IsReminderSet" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *         &lt;element name="IsPrivate" type="{http://www.w3.org/2001/XMLSchema}boolean"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CalendarEventDetails", propOrder = {
    "id",
    "subject",
    "location",
    "isMeeting",
    "isRecurring",
    "isException",
    "isReminderSet",
    "isPrivate"
})
public class CalendarEventDetails
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ID")
    protected String id;
    @XmlElement(name = "Subject")
    protected String subject;
    @XmlElement(name = "Location")
    protected String location;
    @XmlElement(name = "IsMeeting")
    protected boolean isMeeting;
    @XmlElement(name = "IsRecurring")
    protected boolean isRecurring;
    @XmlElement(name = "IsException")
    protected boolean isException;
    @XmlElement(name = "IsReminderSet")
    protected boolean isReminderSet;
    @XmlElement(name = "IsPrivate")
    protected boolean isPrivate;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getID() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setID(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSubject(String value) {
        this.subject = value;
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocation(String value) {
        this.location = value;
    }

    /**
     * Gets the value of the isMeeting property.
     * 
     */
    public boolean isIsMeeting() {
        return isMeeting;
    }

    /**
     * Sets the value of the isMeeting property.
     * 
     */
    public void setIsMeeting(boolean value) {
        this.isMeeting = value;
    }

    /**
     * Gets the value of the isRecurring property.
     * 
     */
    public boolean isIsRecurring() {
        return isRecurring;
    }

    /**
     * Sets the value of the isRecurring property.
     * 
     */
    public void setIsRecurring(boolean value) {
        this.isRecurring = value;
    }

    /**
     * Gets the value of the isException property.
     * 
     */
    public boolean isIsException() {
        return isException;
    }

    /**
     * Sets the value of the isException property.
     * 
     */
    public void setIsException(boolean value) {
        this.isException = value;
    }

    /**
     * Gets the value of the isReminderSet property.
     * 
     */
    public boolean isIsReminderSet() {
        return isReminderSet;
    }

    /**
     * Sets the value of the isReminderSet property.
     * 
     */
    public void setIsReminderSet(boolean value) {
        this.isReminderSet = value;
    }

    /**
     * Gets the value of the isPrivate property.
     * 
     */
    public boolean isIsPrivate() {
        return isPrivate;
    }

    /**
     * Sets the value of the isPrivate property.
     * 
     */
    public void setIsPrivate(boolean value) {
        this.isPrivate = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theID;
            theID = this.getID();
            strategy.appendField(locator, this, "id", buffer, theID);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            String theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation);
        }
        {
            boolean theIsMeeting;
            theIsMeeting = this.isIsMeeting();
            strategy.appendField(locator, this, "isMeeting", buffer, theIsMeeting);
        }
        {
            boolean theIsRecurring;
            theIsRecurring = this.isIsRecurring();
            strategy.appendField(locator, this, "isRecurring", buffer, theIsRecurring);
        }
        {
            boolean theIsException;
            theIsException = this.isIsException();
            strategy.appendField(locator, this, "isException", buffer, theIsException);
        }
        {
            boolean theIsReminderSet;
            theIsReminderSet = this.isIsReminderSet();
            strategy.appendField(locator, this, "isReminderSet", buffer, theIsReminderSet);
        }
        {
            boolean theIsPrivate;
            theIsPrivate = this.isIsPrivate();
            strategy.appendField(locator, this, "isPrivate", buffer, theIsPrivate);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CalendarEventDetails)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final CalendarEventDetails that = ((CalendarEventDetails) object);
        {
            String lhsID;
            lhsID = this.getID();
            String rhsID;
            rhsID = that.getID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsID), LocatorUtils.property(thatLocator, "id", rhsID), lhsID, rhsID)) {
                return false;
            }
        }
        {
            String lhsSubject;
            lhsSubject = this.getSubject();
            String rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            String lhsLocation;
            lhsLocation = this.getLocation();
            String rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            boolean lhsIsMeeting;
            lhsIsMeeting = this.isIsMeeting();
            boolean rhsIsMeeting;
            rhsIsMeeting = that.isIsMeeting();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isMeeting", lhsIsMeeting), LocatorUtils.property(thatLocator, "isMeeting", rhsIsMeeting), lhsIsMeeting, rhsIsMeeting)) {
                return false;
            }
        }
        {
            boolean lhsIsRecurring;
            lhsIsRecurring = this.isIsRecurring();
            boolean rhsIsRecurring;
            rhsIsRecurring = that.isIsRecurring();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isRecurring", lhsIsRecurring), LocatorUtils.property(thatLocator, "isRecurring", rhsIsRecurring), lhsIsRecurring, rhsIsRecurring)) {
                return false;
            }
        }
        {
            boolean lhsIsException;
            lhsIsException = this.isIsException();
            boolean rhsIsException;
            rhsIsException = that.isIsException();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isException", lhsIsException), LocatorUtils.property(thatLocator, "isException", rhsIsException), lhsIsException, rhsIsException)) {
                return false;
            }
        }
        {
            boolean lhsIsReminderSet;
            lhsIsReminderSet = this.isIsReminderSet();
            boolean rhsIsReminderSet;
            rhsIsReminderSet = that.isIsReminderSet();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isReminderSet", lhsIsReminderSet), LocatorUtils.property(thatLocator, "isReminderSet", rhsIsReminderSet), lhsIsReminderSet, rhsIsReminderSet)) {
                return false;
            }
        }
        {
            boolean lhsIsPrivate;
            lhsIsPrivate = this.isIsPrivate();
            boolean rhsIsPrivate;
            rhsIsPrivate = that.isIsPrivate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isPrivate", lhsIsPrivate), LocatorUtils.property(thatLocator, "isPrivate", rhsIsPrivate), lhsIsPrivate, rhsIsPrivate)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theID;
            theID = this.getID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theID), currentHashCode, theID);
        }
        {
            String theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            String theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            boolean theIsMeeting;
            theIsMeeting = this.isIsMeeting();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isMeeting", theIsMeeting), currentHashCode, theIsMeeting);
        }
        {
            boolean theIsRecurring;
            theIsRecurring = this.isIsRecurring();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isRecurring", theIsRecurring), currentHashCode, theIsRecurring);
        }
        {
            boolean theIsException;
            theIsException = this.isIsException();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isException", theIsException), currentHashCode, theIsException);
        }
        {
            boolean theIsReminderSet;
            theIsReminderSet = this.isIsReminderSet();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isReminderSet", theIsReminderSet), currentHashCode, theIsReminderSet);
        }
        {
            boolean theIsPrivate;
            theIsPrivate = this.isIsPrivate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isPrivate", theIsPrivate), currentHashCode, theIsPrivate);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
