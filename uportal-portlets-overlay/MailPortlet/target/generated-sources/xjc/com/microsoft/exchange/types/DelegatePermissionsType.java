//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for DelegatePermissionsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="DelegatePermissionsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="CalendarFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *         &lt;element name="TasksFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *         &lt;element name="InboxFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *         &lt;element name="ContactsFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *         &lt;element name="NotesFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *         &lt;element name="JournalFolderPermissionLevel" type="{http://schemas.microsoft.com/exchange/services/2006/types}DelegateFolderPermissionLevelType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DelegatePermissionsType", propOrder = {
    "calendarFolderPermissionLevel",
    "tasksFolderPermissionLevel",
    "inboxFolderPermissionLevel",
    "contactsFolderPermissionLevel",
    "notesFolderPermissionLevel",
    "journalFolderPermissionLevel"
})
public class DelegatePermissionsType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "CalendarFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType calendarFolderPermissionLevel;
    @XmlElement(name = "TasksFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType tasksFolderPermissionLevel;
    @XmlElement(name = "InboxFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType inboxFolderPermissionLevel;
    @XmlElement(name = "ContactsFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType contactsFolderPermissionLevel;
    @XmlElement(name = "NotesFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType notesFolderPermissionLevel;
    @XmlElement(name = "JournalFolderPermissionLevel")
    protected DelegateFolderPermissionLevelType journalFolderPermissionLevel;

    /**
     * Gets the value of the calendarFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getCalendarFolderPermissionLevel() {
        return calendarFolderPermissionLevel;
    }

    /**
     * Sets the value of the calendarFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setCalendarFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.calendarFolderPermissionLevel = value;
    }

    /**
     * Gets the value of the tasksFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getTasksFolderPermissionLevel() {
        return tasksFolderPermissionLevel;
    }

    /**
     * Sets the value of the tasksFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setTasksFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.tasksFolderPermissionLevel = value;
    }

    /**
     * Gets the value of the inboxFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getInboxFolderPermissionLevel() {
        return inboxFolderPermissionLevel;
    }

    /**
     * Sets the value of the inboxFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setInboxFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.inboxFolderPermissionLevel = value;
    }

    /**
     * Gets the value of the contactsFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getContactsFolderPermissionLevel() {
        return contactsFolderPermissionLevel;
    }

    /**
     * Sets the value of the contactsFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setContactsFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.contactsFolderPermissionLevel = value;
    }

    /**
     * Gets the value of the notesFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getNotesFolderPermissionLevel() {
        return notesFolderPermissionLevel;
    }

    /**
     * Sets the value of the notesFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setNotesFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.notesFolderPermissionLevel = value;
    }

    /**
     * Gets the value of the journalFolderPermissionLevel property.
     * 
     * @return
     *     possible object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public DelegateFolderPermissionLevelType getJournalFolderPermissionLevel() {
        return journalFolderPermissionLevel;
    }

    /**
     * Sets the value of the journalFolderPermissionLevel property.
     * 
     * @param value
     *     allowed object is
     *     {@link DelegateFolderPermissionLevelType }
     *     
     */
    public void setJournalFolderPermissionLevel(DelegateFolderPermissionLevelType value) {
        this.journalFolderPermissionLevel = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DelegateFolderPermissionLevelType theCalendarFolderPermissionLevel;
            theCalendarFolderPermissionLevel = this.getCalendarFolderPermissionLevel();
            strategy.appendField(locator, this, "calendarFolderPermissionLevel", buffer, theCalendarFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theTasksFolderPermissionLevel;
            theTasksFolderPermissionLevel = this.getTasksFolderPermissionLevel();
            strategy.appendField(locator, this, "tasksFolderPermissionLevel", buffer, theTasksFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theInboxFolderPermissionLevel;
            theInboxFolderPermissionLevel = this.getInboxFolderPermissionLevel();
            strategy.appendField(locator, this, "inboxFolderPermissionLevel", buffer, theInboxFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theContactsFolderPermissionLevel;
            theContactsFolderPermissionLevel = this.getContactsFolderPermissionLevel();
            strategy.appendField(locator, this, "contactsFolderPermissionLevel", buffer, theContactsFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theNotesFolderPermissionLevel;
            theNotesFolderPermissionLevel = this.getNotesFolderPermissionLevel();
            strategy.appendField(locator, this, "notesFolderPermissionLevel", buffer, theNotesFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theJournalFolderPermissionLevel;
            theJournalFolderPermissionLevel = this.getJournalFolderPermissionLevel();
            strategy.appendField(locator, this, "journalFolderPermissionLevel", buffer, theJournalFolderPermissionLevel);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof DelegatePermissionsType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final DelegatePermissionsType that = ((DelegatePermissionsType) object);
        {
            DelegateFolderPermissionLevelType lhsCalendarFolderPermissionLevel;
            lhsCalendarFolderPermissionLevel = this.getCalendarFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsCalendarFolderPermissionLevel;
            rhsCalendarFolderPermissionLevel = that.getCalendarFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "calendarFolderPermissionLevel", lhsCalendarFolderPermissionLevel), LocatorUtils.property(thatLocator, "calendarFolderPermissionLevel", rhsCalendarFolderPermissionLevel), lhsCalendarFolderPermissionLevel, rhsCalendarFolderPermissionLevel)) {
                return false;
            }
        }
        {
            DelegateFolderPermissionLevelType lhsTasksFolderPermissionLevel;
            lhsTasksFolderPermissionLevel = this.getTasksFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsTasksFolderPermissionLevel;
            rhsTasksFolderPermissionLevel = that.getTasksFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tasksFolderPermissionLevel", lhsTasksFolderPermissionLevel), LocatorUtils.property(thatLocator, "tasksFolderPermissionLevel", rhsTasksFolderPermissionLevel), lhsTasksFolderPermissionLevel, rhsTasksFolderPermissionLevel)) {
                return false;
            }
        }
        {
            DelegateFolderPermissionLevelType lhsInboxFolderPermissionLevel;
            lhsInboxFolderPermissionLevel = this.getInboxFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsInboxFolderPermissionLevel;
            rhsInboxFolderPermissionLevel = that.getInboxFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inboxFolderPermissionLevel", lhsInboxFolderPermissionLevel), LocatorUtils.property(thatLocator, "inboxFolderPermissionLevel", rhsInboxFolderPermissionLevel), lhsInboxFolderPermissionLevel, rhsInboxFolderPermissionLevel)) {
                return false;
            }
        }
        {
            DelegateFolderPermissionLevelType lhsContactsFolderPermissionLevel;
            lhsContactsFolderPermissionLevel = this.getContactsFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsContactsFolderPermissionLevel;
            rhsContactsFolderPermissionLevel = that.getContactsFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactsFolderPermissionLevel", lhsContactsFolderPermissionLevel), LocatorUtils.property(thatLocator, "contactsFolderPermissionLevel", rhsContactsFolderPermissionLevel), lhsContactsFolderPermissionLevel, rhsContactsFolderPermissionLevel)) {
                return false;
            }
        }
        {
            DelegateFolderPermissionLevelType lhsNotesFolderPermissionLevel;
            lhsNotesFolderPermissionLevel = this.getNotesFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsNotesFolderPermissionLevel;
            rhsNotesFolderPermissionLevel = that.getNotesFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notesFolderPermissionLevel", lhsNotesFolderPermissionLevel), LocatorUtils.property(thatLocator, "notesFolderPermissionLevel", rhsNotesFolderPermissionLevel), lhsNotesFolderPermissionLevel, rhsNotesFolderPermissionLevel)) {
                return false;
            }
        }
        {
            DelegateFolderPermissionLevelType lhsJournalFolderPermissionLevel;
            lhsJournalFolderPermissionLevel = this.getJournalFolderPermissionLevel();
            DelegateFolderPermissionLevelType rhsJournalFolderPermissionLevel;
            rhsJournalFolderPermissionLevel = that.getJournalFolderPermissionLevel();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "journalFolderPermissionLevel", lhsJournalFolderPermissionLevel), LocatorUtils.property(thatLocator, "journalFolderPermissionLevel", rhsJournalFolderPermissionLevel), lhsJournalFolderPermissionLevel, rhsJournalFolderPermissionLevel)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DelegateFolderPermissionLevelType theCalendarFolderPermissionLevel;
            theCalendarFolderPermissionLevel = this.getCalendarFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "calendarFolderPermissionLevel", theCalendarFolderPermissionLevel), currentHashCode, theCalendarFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theTasksFolderPermissionLevel;
            theTasksFolderPermissionLevel = this.getTasksFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tasksFolderPermissionLevel", theTasksFolderPermissionLevel), currentHashCode, theTasksFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theInboxFolderPermissionLevel;
            theInboxFolderPermissionLevel = this.getInboxFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inboxFolderPermissionLevel", theInboxFolderPermissionLevel), currentHashCode, theInboxFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theContactsFolderPermissionLevel;
            theContactsFolderPermissionLevel = this.getContactsFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactsFolderPermissionLevel", theContactsFolderPermissionLevel), currentHashCode, theContactsFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theNotesFolderPermissionLevel;
            theNotesFolderPermissionLevel = this.getNotesFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notesFolderPermissionLevel", theNotesFolderPermissionLevel), currentHashCode, theNotesFolderPermissionLevel);
        }
        {
            DelegateFolderPermissionLevelType theJournalFolderPermissionLevel;
            theJournalFolderPermissionLevel = this.getJournalFolderPermissionLevel();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "journalFolderPermissionLevel", theJournalFolderPermissionLevel), currentHashCode, theJournalFolderPermissionLevel);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
