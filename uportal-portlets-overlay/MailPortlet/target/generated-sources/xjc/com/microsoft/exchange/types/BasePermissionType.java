//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A permission on a folder
 * 
 * <p>Java class for BasePermissionType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BasePermissionType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="UserId" type="{http://schemas.microsoft.com/exchange/services/2006/types}UserIdType"/>
 *         &lt;element name="CanCreateItems" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="CanCreateSubFolders" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsFolderOwner" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsFolderVisible" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="IsFolderContact" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="EditItems" type="{http://schemas.microsoft.com/exchange/services/2006/types}PermissionActionType" minOccurs="0"/>
 *         &lt;element name="DeleteItems" type="{http://schemas.microsoft.com/exchange/services/2006/types}PermissionActionType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BasePermissionType", propOrder = {
    "userId",
    "canCreateItems",
    "canCreateSubFolders",
    "isFolderOwner",
    "isFolderVisible",
    "isFolderContact",
    "editItems",
    "deleteItems"
})
@XmlSeeAlso({
    CalendarPermissionType.class,
    PermissionType.class
})
public abstract class BasePermissionType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "UserId", required = true)
    protected UserIdType userId;
    @XmlElement(name = "CanCreateItems")
    protected Boolean canCreateItems;
    @XmlElement(name = "CanCreateSubFolders")
    protected Boolean canCreateSubFolders;
    @XmlElement(name = "IsFolderOwner")
    protected Boolean isFolderOwner;
    @XmlElement(name = "IsFolderVisible")
    protected Boolean isFolderVisible;
    @XmlElement(name = "IsFolderContact")
    protected Boolean isFolderContact;
    @XmlElement(name = "EditItems")
    protected PermissionActionType editItems;
    @XmlElement(name = "DeleteItems")
    protected PermissionActionType deleteItems;

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link UserIdType }
     *     
     */
    public UserIdType getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link UserIdType }
     *     
     */
    public void setUserId(UserIdType value) {
        this.userId = value;
    }

    /**
     * Gets the value of the canCreateItems property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCanCreateItems() {
        return canCreateItems;
    }

    /**
     * Sets the value of the canCreateItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCanCreateItems(Boolean value) {
        this.canCreateItems = value;
    }

    /**
     * Gets the value of the canCreateSubFolders property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isCanCreateSubFolders() {
        return canCreateSubFolders;
    }

    /**
     * Sets the value of the canCreateSubFolders property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setCanCreateSubFolders(Boolean value) {
        this.canCreateSubFolders = value;
    }

    /**
     * Gets the value of the isFolderOwner property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsFolderOwner() {
        return isFolderOwner;
    }

    /**
     * Sets the value of the isFolderOwner property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsFolderOwner(Boolean value) {
        this.isFolderOwner = value;
    }

    /**
     * Gets the value of the isFolderVisible property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsFolderVisible() {
        return isFolderVisible;
    }

    /**
     * Sets the value of the isFolderVisible property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsFolderVisible(Boolean value) {
        this.isFolderVisible = value;
    }

    /**
     * Gets the value of the isFolderContact property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsFolderContact() {
        return isFolderContact;
    }

    /**
     * Sets the value of the isFolderContact property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsFolderContact(Boolean value) {
        this.isFolderContact = value;
    }

    /**
     * Gets the value of the editItems property.
     * 
     * @return
     *     possible object is
     *     {@link PermissionActionType }
     *     
     */
    public PermissionActionType getEditItems() {
        return editItems;
    }

    /**
     * Sets the value of the editItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermissionActionType }
     *     
     */
    public void setEditItems(PermissionActionType value) {
        this.editItems = value;
    }

    /**
     * Gets the value of the deleteItems property.
     * 
     * @return
     *     possible object is
     *     {@link PermissionActionType }
     *     
     */
    public PermissionActionType getDeleteItems() {
        return deleteItems;
    }

    /**
     * Sets the value of the deleteItems property.
     * 
     * @param value
     *     allowed object is
     *     {@link PermissionActionType }
     *     
     */
    public void setDeleteItems(PermissionActionType value) {
        this.deleteItems = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            UserIdType theUserId;
            theUserId = this.getUserId();
            strategy.appendField(locator, this, "userId", buffer, theUserId);
        }
        {
            Boolean theCanCreateItems;
            theCanCreateItems = this.isCanCreateItems();
            strategy.appendField(locator, this, "canCreateItems", buffer, theCanCreateItems);
        }
        {
            Boolean theCanCreateSubFolders;
            theCanCreateSubFolders = this.isCanCreateSubFolders();
            strategy.appendField(locator, this, "canCreateSubFolders", buffer, theCanCreateSubFolders);
        }
        {
            Boolean theIsFolderOwner;
            theIsFolderOwner = this.isIsFolderOwner();
            strategy.appendField(locator, this, "isFolderOwner", buffer, theIsFolderOwner);
        }
        {
            Boolean theIsFolderVisible;
            theIsFolderVisible = this.isIsFolderVisible();
            strategy.appendField(locator, this, "isFolderVisible", buffer, theIsFolderVisible);
        }
        {
            Boolean theIsFolderContact;
            theIsFolderContact = this.isIsFolderContact();
            strategy.appendField(locator, this, "isFolderContact", buffer, theIsFolderContact);
        }
        {
            PermissionActionType theEditItems;
            theEditItems = this.getEditItems();
            strategy.appendField(locator, this, "editItems", buffer, theEditItems);
        }
        {
            PermissionActionType theDeleteItems;
            theDeleteItems = this.getDeleteItems();
            strategy.appendField(locator, this, "deleteItems", buffer, theDeleteItems);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof BasePermissionType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final BasePermissionType that = ((BasePermissionType) object);
        {
            UserIdType lhsUserId;
            lhsUserId = this.getUserId();
            UserIdType rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            Boolean lhsCanCreateItems;
            lhsCanCreateItems = this.isCanCreateItems();
            Boolean rhsCanCreateItems;
            rhsCanCreateItems = that.isCanCreateItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "canCreateItems", lhsCanCreateItems), LocatorUtils.property(thatLocator, "canCreateItems", rhsCanCreateItems), lhsCanCreateItems, rhsCanCreateItems)) {
                return false;
            }
        }
        {
            Boolean lhsCanCreateSubFolders;
            lhsCanCreateSubFolders = this.isCanCreateSubFolders();
            Boolean rhsCanCreateSubFolders;
            rhsCanCreateSubFolders = that.isCanCreateSubFolders();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "canCreateSubFolders", lhsCanCreateSubFolders), LocatorUtils.property(thatLocator, "canCreateSubFolders", rhsCanCreateSubFolders), lhsCanCreateSubFolders, rhsCanCreateSubFolders)) {
                return false;
            }
        }
        {
            Boolean lhsIsFolderOwner;
            lhsIsFolderOwner = this.isIsFolderOwner();
            Boolean rhsIsFolderOwner;
            rhsIsFolderOwner = that.isIsFolderOwner();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isFolderOwner", lhsIsFolderOwner), LocatorUtils.property(thatLocator, "isFolderOwner", rhsIsFolderOwner), lhsIsFolderOwner, rhsIsFolderOwner)) {
                return false;
            }
        }
        {
            Boolean lhsIsFolderVisible;
            lhsIsFolderVisible = this.isIsFolderVisible();
            Boolean rhsIsFolderVisible;
            rhsIsFolderVisible = that.isIsFolderVisible();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isFolderVisible", lhsIsFolderVisible), LocatorUtils.property(thatLocator, "isFolderVisible", rhsIsFolderVisible), lhsIsFolderVisible, rhsIsFolderVisible)) {
                return false;
            }
        }
        {
            Boolean lhsIsFolderContact;
            lhsIsFolderContact = this.isIsFolderContact();
            Boolean rhsIsFolderContact;
            rhsIsFolderContact = that.isIsFolderContact();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isFolderContact", lhsIsFolderContact), LocatorUtils.property(thatLocator, "isFolderContact", rhsIsFolderContact), lhsIsFolderContact, rhsIsFolderContact)) {
                return false;
            }
        }
        {
            PermissionActionType lhsEditItems;
            lhsEditItems = this.getEditItems();
            PermissionActionType rhsEditItems;
            rhsEditItems = that.getEditItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "editItems", lhsEditItems), LocatorUtils.property(thatLocator, "editItems", rhsEditItems), lhsEditItems, rhsEditItems)) {
                return false;
            }
        }
        {
            PermissionActionType lhsDeleteItems;
            lhsDeleteItems = this.getDeleteItems();
            PermissionActionType rhsDeleteItems;
            rhsDeleteItems = that.getDeleteItems();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deleteItems", lhsDeleteItems), LocatorUtils.property(thatLocator, "deleteItems", rhsDeleteItems), lhsDeleteItems, rhsDeleteItems)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            UserIdType theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            Boolean theCanCreateItems;
            theCanCreateItems = this.isCanCreateItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "canCreateItems", theCanCreateItems), currentHashCode, theCanCreateItems);
        }
        {
            Boolean theCanCreateSubFolders;
            theCanCreateSubFolders = this.isCanCreateSubFolders();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "canCreateSubFolders", theCanCreateSubFolders), currentHashCode, theCanCreateSubFolders);
        }
        {
            Boolean theIsFolderOwner;
            theIsFolderOwner = this.isIsFolderOwner();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isFolderOwner", theIsFolderOwner), currentHashCode, theIsFolderOwner);
        }
        {
            Boolean theIsFolderVisible;
            theIsFolderVisible = this.isIsFolderVisible();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isFolderVisible", theIsFolderVisible), currentHashCode, theIsFolderVisible);
        }
        {
            Boolean theIsFolderContact;
            theIsFolderContact = this.isIsFolderContact();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isFolderContact", theIsFolderContact), currentHashCode, theIsFolderContact);
        }
        {
            PermissionActionType theEditItems;
            theEditItems = this.getEditItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "editItems", theEditItems), currentHashCode, theEditItems);
        }
        {
            PermissionActionType theDeleteItems;
            theDeleteItems = this.getDeleteItems();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deleteItems", theDeleteItems), currentHashCode, theDeleteItems);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
