//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-b10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.20 at 01:37:20 PM CEST 
//


package com.microsoft.exchange.types;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ItemChangeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ItemChangeType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="ItemId" type="{http://schemas.microsoft.com/exchange/services/2006/types}ItemIdType"/>
 *           &lt;element name="OccurrenceItemId" type="{http://schemas.microsoft.com/exchange/services/2006/types}OccurrenceItemIdType"/>
 *           &lt;element name="RecurringMasterItemId" type="{http://schemas.microsoft.com/exchange/services/2006/types}RecurringMasterItemIdType"/>
 *         &lt;/choice>
 *         &lt;element name="Updates" type="{http://schemas.microsoft.com/exchange/services/2006/types}NonEmptyArrayOfItemChangeDescriptionsType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ItemChangeType", propOrder = {
    "recurringMasterItemId",
    "occurrenceItemId",
    "itemId",
    "updates"
})
public class ItemChangeType
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "RecurringMasterItemId")
    protected RecurringMasterItemIdType recurringMasterItemId;
    @XmlElement(name = "OccurrenceItemId")
    protected OccurrenceItemIdType occurrenceItemId;
    @XmlElement(name = "ItemId")
    protected ItemIdType itemId;
    @XmlElement(name = "Updates", required = true)
    protected NonEmptyArrayOfItemChangeDescriptionsType updates;

    /**
     * Gets the value of the recurringMasterItemId property.
     * 
     * @return
     *     possible object is
     *     {@link RecurringMasterItemIdType }
     *     
     */
    public RecurringMasterItemIdType getRecurringMasterItemId() {
        return recurringMasterItemId;
    }

    /**
     * Sets the value of the recurringMasterItemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link RecurringMasterItemIdType }
     *     
     */
    public void setRecurringMasterItemId(RecurringMasterItemIdType value) {
        this.recurringMasterItemId = value;
    }

    /**
     * Gets the value of the occurrenceItemId property.
     * 
     * @return
     *     possible object is
     *     {@link OccurrenceItemIdType }
     *     
     */
    public OccurrenceItemIdType getOccurrenceItemId() {
        return occurrenceItemId;
    }

    /**
     * Sets the value of the occurrenceItemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link OccurrenceItemIdType }
     *     
     */
    public void setOccurrenceItemId(OccurrenceItemIdType value) {
        this.occurrenceItemId = value;
    }

    /**
     * Gets the value of the itemId property.
     * 
     * @return
     *     possible object is
     *     {@link ItemIdType }
     *     
     */
    public ItemIdType getItemId() {
        return itemId;
    }

    /**
     * Sets the value of the itemId property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemIdType }
     *     
     */
    public void setItemId(ItemIdType value) {
        this.itemId = value;
    }

    /**
     * Gets the value of the updates property.
     * 
     * @return
     *     possible object is
     *     {@link NonEmptyArrayOfItemChangeDescriptionsType }
     *     
     */
    public NonEmptyArrayOfItemChangeDescriptionsType getUpdates() {
        return updates;
    }

    /**
     * Sets the value of the updates property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonEmptyArrayOfItemChangeDescriptionsType }
     *     
     */
    public void setUpdates(NonEmptyArrayOfItemChangeDescriptionsType value) {
        this.updates = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            RecurringMasterItemIdType theRecurringMasterItemId;
            theRecurringMasterItemId = this.getRecurringMasterItemId();
            strategy.appendField(locator, this, "recurringMasterItemId", buffer, theRecurringMasterItemId);
        }
        {
            OccurrenceItemIdType theOccurrenceItemId;
            theOccurrenceItemId = this.getOccurrenceItemId();
            strategy.appendField(locator, this, "occurrenceItemId", buffer, theOccurrenceItemId);
        }
        {
            ItemIdType theItemId;
            theItemId = this.getItemId();
            strategy.appendField(locator, this, "itemId", buffer, theItemId);
        }
        {
            NonEmptyArrayOfItemChangeDescriptionsType theUpdates;
            theUpdates = this.getUpdates();
            strategy.appendField(locator, this, "updates", buffer, theUpdates);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ItemChangeType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ItemChangeType that = ((ItemChangeType) object);
        {
            RecurringMasterItemIdType lhsRecurringMasterItemId;
            lhsRecurringMasterItemId = this.getRecurringMasterItemId();
            RecurringMasterItemIdType rhsRecurringMasterItemId;
            rhsRecurringMasterItemId = that.getRecurringMasterItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recurringMasterItemId", lhsRecurringMasterItemId), LocatorUtils.property(thatLocator, "recurringMasterItemId", rhsRecurringMasterItemId), lhsRecurringMasterItemId, rhsRecurringMasterItemId)) {
                return false;
            }
        }
        {
            OccurrenceItemIdType lhsOccurrenceItemId;
            lhsOccurrenceItemId = this.getOccurrenceItemId();
            OccurrenceItemIdType rhsOccurrenceItemId;
            rhsOccurrenceItemId = that.getOccurrenceItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "occurrenceItemId", lhsOccurrenceItemId), LocatorUtils.property(thatLocator, "occurrenceItemId", rhsOccurrenceItemId), lhsOccurrenceItemId, rhsOccurrenceItemId)) {
                return false;
            }
        }
        {
            ItemIdType lhsItemId;
            lhsItemId = this.getItemId();
            ItemIdType rhsItemId;
            rhsItemId = that.getItemId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "itemId", lhsItemId), LocatorUtils.property(thatLocator, "itemId", rhsItemId), lhsItemId, rhsItemId)) {
                return false;
            }
        }
        {
            NonEmptyArrayOfItemChangeDescriptionsType lhsUpdates;
            lhsUpdates = this.getUpdates();
            NonEmptyArrayOfItemChangeDescriptionsType rhsUpdates;
            rhsUpdates = that.getUpdates();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updates", lhsUpdates), LocatorUtils.property(thatLocator, "updates", rhsUpdates), lhsUpdates, rhsUpdates)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            RecurringMasterItemIdType theRecurringMasterItemId;
            theRecurringMasterItemId = this.getRecurringMasterItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recurringMasterItemId", theRecurringMasterItemId), currentHashCode, theRecurringMasterItemId);
        }
        {
            OccurrenceItemIdType theOccurrenceItemId;
            theOccurrenceItemId = this.getOccurrenceItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "occurrenceItemId", theOccurrenceItemId), currentHashCode, theOccurrenceItemId);
        }
        {
            ItemIdType theItemId;
            theItemId = this.getItemId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "itemId", theItemId), currentHashCode, theItemId);
        }
        {
            NonEmptyArrayOfItemChangeDescriptionsType theUpdates;
            theUpdates = this.getUpdates();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updates", theUpdates), currentHashCode, theUpdates);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
